var search_data = {"index":{"searchIndex":["achievement","achievementscontroller","achievementshelper","ajaxcontroller","ajaxhelper","album","albumscontroller","albumshelper","albumstrack","applicationcontroller","applicationhelper","artist","artistscontroller","artistshelper","createadminservice","entity","achievement","album","albumstrack","artist","base","oembedable","slugged","repository","behavior","thumbnailed","track","user","useractivity","metatagshelper","notificationscontroller","notificationshelper","profilescontroller","profileshelper","repository","achievements","albums","albumstracks","artists","base","behavior","lastfmd","musicbrainzed","searchable","slugged","thumbnailed","youtubed","tracks","useractivities","users","searchcontroller","searchhelper","services","base","github","githubissue","githubreport","lastfm","base","lastfmalbum","lastfmartist","musicbrainz","base","musicbrainzalbum","musicbrainzartist","musicbrainztrack","omniauth","omniauthuser","s3","s3albumthumbnail","s3artistthumbnail","s3thumbnail","tmtachievement","base","createdaccount","createdaccount2","youtube","youtubevideo","servicescontroller","serviceshelper","sessionscontroller","tmtcontroller","tmthelper","track","trackscontroller","trackshelper","user","useractivity","userscontroller","utils","tmtlogger","about()","album_search()","api_client()","append_remote_data()","artist()","artist_search()","assignee()","bug_params()","bugreport()","build_query_string()","call()","count_rewardees()","create()","create_automated()","create_thumbnails_for()","dashboard()","delete_bucket_image()","delete_thumbnails_for()","description()","description()","destroy()","download_remote_image()","edit()","edit()","embed()","embed()","embed()","factory_by_slug()","failure()","find_all_next()","find_all_previous()","find_by_slug()","find_expired_lastfm()","find_expired_musicbrainz()","find_expired_youtube()","find_least_popular()","find_most_popular()","find_next()","find_notifications_for_user()","find_or_create()","find_or_create()","find_or_create()","find_or_create()","find_or_create()","find_or_create()","find_or_create_by_name()","find_or_create_by_names_list()","find_paginated_notifications_for_user()","find_popular()","find_previous()","find_random_popular()","find_remote()","find_remote()","find_remote()","find_remote_album()","find_remote_artist()","find_remote_by_name()","find_remote_releases()","find_remote_tracks()","find_with_no_tracks()","find_with_no_tracks()","find_with_tracks()","find_with_tracks()","format_pretty()","format_similar_arists()","format_working_file()","generate_slug()","generate_thumbnail()","generate_thumbnails()","generate_thumbnails()","generate_top_artists_datalist()","get_bucket()","get_client()","get_info_context()","get_prefix()","get_thumbnail_key()","get_thumbnail_key_for()","get_thumbnail_url()","get_type_info()","get_type_warn()","get_video_key()","get_warn_context()","github()","has_next?()","has_previous?()","has_unread_notifications?()","has_unread_notifications?()","homepage()","how_to()","index()","index()","index()","index()","lastfm_expiration_date()","legal()","linked_obj()","load_meta()","log()","login()","make_all_unpopular()","mark_user_notifications_read()","meta_description()","meta_description()","meta_description()","meta_description()","meta_keywords()","meta_keywords()","meta_keywords()","meta_keywords()","meta_title()","meta_title()","meta_title()","meta_title()","musicbrainz_expiration_date()","next()","next()","next?()","next?()","not_found()","number_of_rewarded()","oembed()","okstfu()","parse_key()","pct()","player_attributes()","populate_discography()","populate_trackless()","populate_trackless_album()","prepare_similar_artists_by_names()","previous()","previous()","previous?()","previous?()","query_params()","release_date_formated()","reload_current_user()","remote_top_artists()","report()","require_login()","reviewer()","reviewer_album_params()","reviewer_track_params()","reward!()","reward_account_creation()","rewarded?()","save_and_filter_album_list()","save_and_filter_track_list()","search()","search()","search()","search()","search_order()","search_order_field()","search_where()","search_where_field()","send_to_bucket()","show()","show()","show()","show()","slug()","slug_exists?()","slug_params()","tempdir()","title()","title()","title()","title_context()","title_context()","title_context()","title_context()","to_file_path()","to_json()","to_labels()","to_map()","to_meta_tags()","to_oembed_hash()","to_param()","to_summary()","to_title()","track_search()","truncate_title()","type()","unique?()","unread_notifications()","unread_notifications_count()","unsupported_length_replacement()","update()","update_album_profile()","update_artist_profile()","update_automated()","update_expired()","update_expired()","update_expired()","update_expired_artist()","update_popular()","update_tmt_top_artists()","user_was_rewarded?()","validates?()","view()","viewed?()","warn()","whatsup()","with_no_thumbnail()","youtube_expiration_date()","youtube_key_is_expired?()","yt_key()","readme"],"longSearchIndex":["achievement","achievementscontroller","achievementshelper","ajaxcontroller","ajaxhelper","album","albumscontroller","albumshelper","albumstrack","applicationcontroller","applicationhelper","artist","artistscontroller","artistshelper","createadminservice","entity","entity::achievement","entity::album","entity::albumstrack","entity::artist","entity::base","entity::oembedable","entity::slugged","entity::slugged::repository","entity::slugged::repository::behavior","entity::thumbnailed","entity::track","entity::user","entity::useractivity","metatagshelper","notificationscontroller","notificationshelper","profilescontroller","profileshelper","repository","repository::achievements","repository::albums","repository::albumstracks","repository::artists","repository::base","repository::behavior","repository::behavior::lastfmd","repository::behavior::musicbrainzed","repository::behavior::searchable","repository::behavior::slugged","repository::behavior::thumbnailed","repository::behavior::youtubed","repository::tracks","repository::useractivities","repository::users","searchcontroller","searchhelper","services","services::base","services::github","services::github::githubissue","services::github::githubreport","services::lastfm","services::lastfm::base","services::lastfm::lastfmalbum","services::lastfm::lastfmartist","services::musicbrainz","services::musicbrainz::base","services::musicbrainz::musicbrainzalbum","services::musicbrainz::musicbrainzartist","services::musicbrainz::musicbrainztrack","services::omniauth","services::omniauth::omniauthuser","services::s3","services::s3::s3albumthumbnail","services::s3::s3artistthumbnail","services::s3::s3thumbnail","services::tmtachievement","services::tmtachievement::base","services::tmtachievement::createdaccount","services::tmtachievement::createdaccount2","services::youtube","services::youtube::youtubevideo","servicescontroller","serviceshelper","sessionscontroller","tmtcontroller","tmthelper","track","trackscontroller","trackshelper","user","useractivity","userscontroller","utils","utils::tmtlogger","tmtcontroller#about()","ajaxcontroller#album_search()","services::youtube::youtubevideo::api_client()","services::lastfm::lastfmartist::append_remote_data()","entity::track#artist()","ajaxcontroller#artist_search()","services::github::githubreport#assignee()","ajaxcontroller#bug_params()","ajaxcontroller#bugreport()","services::youtube::youtubevideo::build_query_string()","createadminservice#call()","repository::achievements#count_rewardees()","sessionscontroller#create()","services::github::githubissue::create_automated()","services::s3::s3thumbnail::create_thumbnails_for()","profilescontroller#dashboard()","services::s3::s3thumbnail::delete_bucket_image()","services::s3::s3thumbnail::delete_thumbnails_for()","services::tmtachievement::createdaccount#description()","services::tmtachievement::createdaccount2#description()","sessionscontroller#destroy()","services::s3::s3thumbnail::download_remote_image()","profilescontroller#edit()","userscontroller#edit()","albumscontroller#embed()","artistscontroller#embed()","trackscontroller#embed()","services::tmtachievement::base::factory_by_slug()","sessionscontroller#failure()","repository::albums#find_all_next()","repository::albums#find_all_previous()","repository::achievements#find_by_slug()","repository::behavior::lastfmd#find_expired_lastfm()","repository::behavior::musicbrainzed#find_expired_musicbrainz()","repository::behavior::youtubed#find_expired_youtube()","repository::achievements#find_least_popular()","repository::achievements#find_most_popular()","repository::albums#find_next()","repository::useractivities#find_notifications_for_user()","services::lastfm::lastfmalbum::find_or_create()","services::lastfm::lastfmartist::find_or_create()","services::musicbrainz::musicbrainzalbum::find_or_create()","services::musicbrainz::musicbrainzartist::find_or_create()","services::musicbrainz::musicbrainztrack::find_or_create()","services::omniauth::omniauthuser::find_or_create()","services::musicbrainz::musicbrainzartist::find_or_create_by_name()","services::musicbrainz::musicbrainzartist::find_or_create_by_names_list()","repository::useractivities#find_paginated_notifications_for_user()","repository::artists#find_popular()","repository::albums#find_previous()","repository::artists#find_random_popular()","services::lastfm::lastfmalbum::find_remote()","services::musicbrainz::musicbrainzalbum::find_remote()","services::musicbrainz::musicbrainzartist::find_remote()","services::musicbrainz::musicbrainzalbum::find_remote_album()","services::lastfm::lastfmartist::find_remote_artist()","services::musicbrainz::musicbrainzartist::find_remote_by_name()","services::musicbrainz::musicbrainzalbum::find_remote_releases()","services::musicbrainz::musicbrainzalbum::find_remote_tracks()","repository::albums#find_with_no_tracks()","repository::albumstracks#find_with_no_tracks()","repository::albums#find_with_tracks()","repository::albumstracks#find_with_tracks()","services::base::format_pretty()","services::lastfm::lastfmartist::format_similar_arists()","services::s3::s3thumbnail::format_working_file()","entity::slugged#generate_slug()","services::s3::s3thumbnail::generate_thumbnail()","services::s3::s3albumthumbnail::generate_thumbnails()","services::s3::s3artistthumbnail::generate_thumbnails()","services::lastfm::lastfmartist::generate_top_artists_datalist()","services::s3::s3thumbnail::get_bucket()","services::s3::s3thumbnail::get_client()","utils::tmtlogger#get_info_context()","utils::tmtlogger#get_prefix()","entity::thumbnailed#get_thumbnail_key()","entity::thumbnailed#get_thumbnail_key_for()","entity::thumbnailed#get_thumbnail_url()","utils::tmtlogger#get_type_info()","utils::tmtlogger#get_type_warn()","services::youtube::youtubevideo::get_video_key()","utils::tmtlogger#get_warn_context()","services::github::githubissue::github()","repository::albums#has_next?()","repository::albums#has_previous?()","entity::user#has_unread_notifications?()","repository::useractivities#has_unread_notifications?()","tmtcontroller#homepage()","services::tmtachievement::createdaccount#how_to()","achievementscontroller#index()","artistscontroller#index()","notificationscontroller#index()","searchcontroller#index()","repository::behavior::lastfmd#lastfm_expiration_date()","tmtcontroller#legal()","entity::useractivity#linked_obj()","applicationcontroller#load_meta()","utils::tmtlogger#log()","sessionscontroller#login()","repository::artists#make_all_unpopular()","repository::useractivities#mark_user_notifications_read()","entity::album#meta_description()","entity::artist#meta_description()","entity::track#meta_description()","services::tmtachievement::base#meta_description()","entity::album#meta_keywords()","entity::artist#meta_keywords()","entity::track#meta_keywords()","services::tmtachievement::base#meta_keywords()","entity::album#meta_title()","entity::artist#meta_title()","entity::track#meta_title()","services::tmtachievement::base#meta_title()","repository::behavior::musicbrainzed#musicbrainz_expiration_date()","entity::album#next()","entity::track#next()","entity::album#next?()","entity::track#next?()","applicationcontroller#not_found()","services::tmtachievement::base#number_of_rewarded()","servicescontroller#oembed()","ajaxcontroller#okstfu()","services::youtube::youtubevideo::parse_key()","applicationhelper::pct()","entity::track#player_attributes()","services::musicbrainz::musicbrainzartist::populate_discography()","services::musicbrainz::musicbrainzalbum::populate_trackless()","services::musicbrainz::musicbrainzalbum::populate_trackless_album()","services::lastfm::lastfmartist::prepare_similar_artists_by_names()","entity::album#previous()","entity::track#previous()","entity::album#previous?()","entity::track#previous?()","ajaxcontroller#query_params()","entity::album#release_date_formated()","applicationcontroller#reload_current_user()","services::lastfm::lastfmartist::remote_top_artists()","services::github::githubissue::report()","applicationcontroller#require_login()","ajaxcontroller#reviewer()","ajaxcontroller#reviewer_album_params()","ajaxcontroller#reviewer_track_params()","services::tmtachievement::base#reward!()","entity::user#reward_account_creation()","services::tmtachievement::base#rewarded?()","services::musicbrainz::musicbrainzalbum::save_and_filter_album_list()","services::musicbrainz::musicbrainztrack::save_and_filter_track_list()","albumscontroller#search()","artistscontroller#search()","repository::behavior::searchable#search()","trackscontroller#search()","repository::behavior::searchable#search_order()","repository::artists#search_order_field()","repository::behavior::searchable#search_where()","repository::artists#search_where_field()","services::s3::s3thumbnail::send_to_bucket()","achievementscontroller#show()","albumscontroller#show()","artistscontroller#show()","trackscontroller#show()","services::tmtachievement::base#slug()","repository::behavior::slugged::slug_exists?()","ajaxcontroller#slug_params()","services::s3::s3thumbnail::tempdir()","entity::useractivity#title()","services::tmtachievement::createdaccount#title()","services::tmtachievement::createdaccount2#title()","entity::album#title_context()","entity::artist#title_context()","entity::track#title_context()","services::tmtachievement::base#title_context()","services::s3::s3thumbnail::to_file_path()","services::github::githubreport#to_json()","services::github::githubissue::to_labels()","services::github::githubreport#to_map()","metatagshelper::to_meta_tags()","entity::oembedable#to_oembed_hash()","entity::slugged::to_param()","services::github::githubissue::to_summary()","services::github::githubissue::to_title()","ajaxcontroller#track_search()","track#truncate_title()","entity::useractivity#type()","services::tmtachievement::base#unique?()","repository::useractivities#unread_notifications()","entity::user#unread_notifications_count()","entity::slugged#unsupported_length_replacement()","profilescontroller#update()","services::lastfm::lastfmalbum::update_album_profile()","services::lastfm::lastfmartist::update_artist_profile()","services::github::githubissue::update_automated()","services::lastfm::lastfmalbum::update_expired()","services::lastfm::lastfmartist::update_expired()","services::musicbrainz::musicbrainzartist::update_expired()","services::musicbrainz::musicbrainzartist::update_expired_artist()","repository::artists#update_popular()","services::lastfm::lastfmartist::update_tmt_top_artists()","repository::useractivities#user_was_rewarded?()","services::tmtachievement::base#validates?()","profilescontroller#view()","entity::useractivity#viewed?()","utils::tmtlogger#warn()","ajaxcontroller#whatsup()","repository::behavior::thumbnailed#with_no_thumbnail()","repository::behavior::youtubed#youtube_expiration_date()","repository::behavior::youtubed#youtube_key_is_expired?()","ajaxcontroller#yt_key()",""],"info":[["Achievement","","Achievement.html","","<p>Represent a release by a musician or band.\n"],["AchievementsController","","AchievementsController.html","",""],["AchievementsHelper","","AchievementsHelper.html","",""],["AjaxController","","AjaxController.html","",""],["AjaxHelper","","AjaxHelper.html","",""],["Album","","Album.html","","<p>Represent a release by a musician or band.\n"],["AlbumsController","","AlbumsController.html","",""],["AlbumsHelper","","AlbumsHelper.html","",""],["AlbumsTrack","","AlbumsTrack.html","","<p>Represent a release by a musician or band.\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Artist","","Artist.html","","<p>Represent a musician or a band\n"],["ArtistsController","","ArtistsController.html","",""],["ArtistsHelper","","ArtistsHelper.html","",""],["CreateAdminService","","CreateAdminService.html","",""],["Entity","","Entity.html","",""],["Entity::Achievement","","Entity/Achievement.html","","<p>Represent a rewarded achievement\n"],["Entity::Album","","Entity/Album.html","","<p>Represent a release by a musician or band.\n"],["Entity::AlbumsTrack","","Entity/AlbumsTrack.html","","<p>Represent a release by a musician or band.\n"],["Entity::Artist","","Entity/Artist.html","","<p>Represent a release by a musician or band.\n"],["Entity::Base","","Entity/Base.html","",""],["Entity::Oembedable","","Entity/Oembedable.html","","<p>Allows TMT objects to be included in social media\n"],["Entity::Slugged","","Entity/Slugged.html","","<p>Represent a release by a musician or band.\n"],["Entity::Slugged::Repository","","Entity/Slugged/Repository.html","",""],["Entity::Slugged::Repository::Behavior","","Entity/Slugged/Repository/Behavior.html","",""],["Entity::Thumbnailed","","Entity/Thumbnailed.html","","<p>Represent a release by a musician or band.\n"],["Entity::Track","","Entity/Track.html","","<p>Represent a release by a musician or band.\n"],["Entity::User","","Entity/User.html","","<p>Represent a release by a musician or band.\n"],["Entity::UserActivity","","Entity/UserActivity.html","","<p>Represent a release by a musician or band.\n"],["MetatagsHelper","","MetatagsHelper.html","",""],["NotificationsController","","NotificationsController.html","",""],["NotificationsHelper","","NotificationsHelper.html","",""],["ProfilesController","","ProfilesController.html","",""],["ProfilesHelper","","ProfilesHelper.html","",""],["Repository","","Repository.html","",""],["Repository::Achievements","","Repository/Achievements.html","",""],["Repository::Albums","","Repository/Albums.html","","<p>This class handles queries of Albums objects.\n"],["Repository::AlbumsTracks","","Repository/AlbumsTracks.html","","<p>This class handles queries of Albums objects.\n"],["Repository::Artists","","Repository/Artists.html","","<p>This class handles queries of Artists objects.\n"],["Repository::Base","","Repository/Base.html","","<p>This is the base class of all the external data services.\n"],["Repository::Behavior","","Repository/Behavior.html","",""],["Repository::Behavior::Lastfmd","","Repository/Behavior/Lastfmd.html","","<p>This class handles queries of Artists objects.\n"],["Repository::Behavior::Musicbrainzed","","Repository/Behavior/Musicbrainzed.html","","<p>This class handles queries of Artists objects.\n"],["Repository::Behavior::Searchable","","Repository/Behavior/Searchable.html","","<p>This class handles search queries\n"],["Repository::Behavior::Slugged","","Repository/Behavior/Slugged.html","","<p>This class handles queries of Artists objects.\n"],["Repository::Behavior::Thumbnailed","","Repository/Behavior/Thumbnailed.html","","<p>This class handles queries of thumbnailed objects.\n"],["Repository::Behavior::Youtubed","","Repository/Behavior/Youtubed.html","","<p>This class handles queries of Artists objects.\n"],["Repository::Tracks","","Repository/Tracks.html","","<p>This class handles queries of Track objects.\n"],["Repository::UserActivities","","Repository/UserActivities.html","",""],["Repository::Users","","Repository/Users.html","","<p>This class handles queries of Track objects.\n"],["SearchController","","SearchController.html","",""],["SearchHelper","","SearchHelper.html","",""],["Services","","Services.html","",""],["Services::Base","","Services/Base.html","","<p>This is the base class of all the external data services.\n"],["Services::Github","","Services/Github.html","",""],["Services::Github::GithubIssue","","Services/Github/GithubIssue.html","","<p>This class talks to Github&#39;s API and logs in an issue\n<p>Documentation on this can be found there\ndeveloper.github.com/v3/issues/#edit-an-issue …\n"],["Services::Github::GithubReport","","Services/Github/GithubReport.html","","<p>This class is a structure matching the issues on github.\n"],["Services::Lastfm","","Services/Lastfm.html","",""],["Services::Lastfm::Base","","Services/Lastfm/Base.html","","<p>This class talks to the Lastfm API\n"],["Services::Lastfm::LastfmAlbum","","Services/Lastfm/LastfmAlbum.html","","<p>This class talks to the Lastfm API and generates album entities from the\nAPI results\n"],["Services::Lastfm::LastfmArtist","","Services/Lastfm/LastfmArtist.html","","<p>This class talks to the Lastfm API and generates artist entities from the\nAPI results\n"],["Services::Musicbrainz","","Services/Musicbrainz.html","",""],["Services::Musicbrainz::Base","","Services/Musicbrainz/Base.html","","<p>This class talks to the Musicbrainz API and generates artist entities from\nthe API results\n"],["Services::Musicbrainz::MusicbrainzAlbum","","Services/Musicbrainz/MusicbrainzAlbum.html","","<p>This class talks to the Musicbrainz API and generates artist entities from\nthe API results\n"],["Services::Musicbrainz::MusicbrainzArtist","","Services/Musicbrainz/MusicbrainzArtist.html","","<p>This class talks to the Musicbrainz API and generates artist entities from\nthe API results\n"],["Services::Musicbrainz::MusicbrainzTrack","","Services/Musicbrainz/MusicbrainzTrack.html","","<p>This class talks to the Musicbrainz API and generates Tracks entities from\nthe API results\n"],["Services::Omniauth","","Services/Omniauth.html","",""],["Services::Omniauth::OmniauthUser","","Services/Omniauth/OmniauthUser.html","","<p>This class talks to the Omniauth API\n"],["Services::S3","","Services/S3.html","",""],["Services::S3::S3AlbumThumbnail","","Services/S3/S3AlbumThumbnail.html","","<p>This class talks to the S3 API and generates album thumbnails\n"],["Services::S3::S3ArtistThumbnail","","Services/S3/S3ArtistThumbnail.html","","<p>This class talks to the S3 API and generates artist thumbnails\n"],["Services::S3::S3Thumbnail","","Services/S3/S3Thumbnail.html","","<p>This class talks to the S3 API\n"],["Services::TMTAchievement","","Services/TMTAchievement.html","",""],["Services::TMTAchievement::Base","","Services/TMTAchievement/Base.html","",""],["Services::TMTAchievement::CreatedAccount","","Services/TMTAchievement/CreatedAccount.html","",""],["Services::TMTAchievement::CreatedAccount2","","Services/TMTAchievement/CreatedAccount2.html","",""],["Services::Youtube","","Services/Youtube.html","",""],["Services::Youtube::YoutubeVideo","","Services/Youtube/YoutubeVideo.html","","<p>This class talks to Youtube and pulls a valid video match\n"],["ServicesController","","ServicesController.html","",""],["ServicesHelper","","ServicesHelper.html","",""],["SessionsController","","SessionsController.html","",""],["TmtController","","TmtController.html","",""],["TmtHelper","","TmtHelper.html","",""],["Track","","Track.html","","<p>Represent a song on a release\n"],["TracksController","","TracksController.html","",""],["TracksHelper","","TracksHelper.html","",""],["User","","User.html","",""],["UserActivity","","UserActivity.html","",""],["UsersController","","UsersController.html","",""],["Utils","","Utils.html","",""],["Utils::TmtLogger","","Utils/TmtLogger.html","",""],["about","TmtController","TmtController.html#method-i-about","()",""],["album_search","AjaxController","AjaxController.html#method-i-album_search","()",""],["api_client","Services::Youtube::YoutubeVideo","Services/Youtube/YoutubeVideo.html#method-c-api_client","()",""],["append_remote_data","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-append_remote_data","(artist, remote)",""],["artist","Entity::Track","Entity/Track.html#method-i-artist","()",""],["artist_search","AjaxController","AjaxController.html#method-i-artist_search","()",""],["assignee","Services::Github::GithubReport","Services/Github/GithubReport.html#method-i-assignee","()",""],["bug_params","AjaxController","AjaxController.html#method-i-bug_params","()",""],["bugreport","AjaxController","AjaxController.html#method-i-bugreport","()",""],["build_query_string","Services::Youtube::YoutubeVideo","Services/Youtube/YoutubeVideo.html#method-c-build_query_string","(track)",""],["call","CreateAdminService","CreateAdminService.html#method-i-call","()",""],["count_rewardees","Repository::Achievements","Repository/Achievements.html#method-i-count_rewardees","(slug)",""],["create","SessionsController","SessionsController.html#method-i-create","()",""],["create_automated","Services::Github::GithubIssue","Services/Github/GithubIssue.html#method-c-create_automated","(data)","<p>Creates an automated bug report and sends it on the Github repo.\n"],["create_thumbnails_for","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-create_thumbnails_for","(entity)",""],["dashboard","ProfilesController","ProfilesController.html#method-i-dashboard","()",""],["delete_bucket_image","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-delete_bucket_image","(thumbnail_key)",""],["delete_thumbnails_for","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-delete_thumbnails_for","(entity)",""],["description","Services::TMTAchievement::CreatedAccount","Services/TMTAchievement/CreatedAccount.html#method-i-description","()",""],["description","Services::TMTAchievement::CreatedAccount2","Services/TMTAchievement/CreatedAccount2.html#method-i-description","()",""],["destroy","SessionsController","SessionsController.html#method-i-destroy","()",""],["download_remote_image","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-download_remote_image","(src)",""],["edit","ProfilesController","ProfilesController.html#method-i-edit","()",""],["edit","UsersController","UsersController.html#method-i-edit","()",""],["embed","AlbumsController","AlbumsController.html#method-i-embed","()",""],["embed","ArtistsController","ArtistsController.html#method-i-embed","()",""],["embed","TracksController","TracksController.html#method-i-embed","()",""],["factory_by_slug","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-c-factory_by_slug","(slug)",""],["failure","SessionsController","SessionsController.html#method-i-failure","()",""],["find_all_next","Repository::Albums","Repository/Albums.html#method-i-find_all_next","(album, track)",""],["find_all_previous","Repository::Albums","Repository/Albums.html#method-i-find_all_previous","(album, track)",""],["find_by_slug","Repository::Achievements","Repository/Achievements.html#method-i-find_by_slug","(slug)",""],["find_expired_lastfm","Repository::Behavior::Lastfmd","Repository/Behavior/Lastfmd.html#method-i-find_expired_lastfm","()","<p>Lists artists than haven&#39;t been updated in a while on Musicbrainz\n"],["find_expired_musicbrainz","Repository::Behavior::Musicbrainzed","Repository/Behavior/Musicbrainzed.html#method-i-find_expired_musicbrainz","()","<p>Lists artists than haven&#39;t been updated in a while on Musicbrainz\n"],["find_expired_youtube","Repository::Behavior::Youtubed","Repository/Behavior/Youtubed.html#method-i-find_expired_youtube","()","<p>Lists artists than haven&#39;t been updated in a while on youtube\n"],["find_least_popular","Repository::Achievements","Repository/Achievements.html#method-i-find_least_popular","()",""],["find_most_popular","Repository::Achievements","Repository/Achievements.html#method-i-find_most_popular","()",""],["find_next","Repository::Albums","Repository/Albums.html#method-i-find_next","(album, track)",""],["find_notifications_for_user","Repository::UserActivities","Repository/UserActivities.html#method-i-find_notifications_for_user","(user)",""],["find_or_create","Services::Lastfm::LastfmAlbum","Services/Lastfm/LastfmAlbum.html#method-c-find_or_create","(lfm_album)","<p>Finds or creates Artist entities from standard LastFM API return data. Only\nsaves albums when a musicbrainz …\n"],["find_or_create","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-find_or_create","(lfm_artist)","<p>Finds or creates Artist entities from standard LastFM API return data. Only\nsaves artists when a musicbrainz …\n"],["find_or_create","Services::Musicbrainz::MusicbrainzAlbum","Services/Musicbrainz/MusicbrainzAlbum.html#method-c-find_or_create","(mb_release)","<p>Finds or creates Album entities from standard Musicbrainz API return data.\n"],["find_or_create","Services::Musicbrainz::MusicbrainzArtist","Services/Musicbrainz/MusicbrainzArtist.html#method-c-find_or_create","(mb_artist)","<p>Finds or creates Artist entities from standard Musicbrainz API return data.\n"],["find_or_create","Services::Musicbrainz::MusicbrainzTrack","Services/Musicbrainz/MusicbrainzTrack.html#method-c-find_or_create","(mb_data)",""],["find_or_create","Services::Omniauth::OmniauthUser","Services/Omniauth/OmniauthUser.html#method-c-find_or_create","(provider, uid, auth)",""],["find_or_create_by_name","Services::Musicbrainz::MusicbrainzArtist","Services/Musicbrainz/MusicbrainzArtist.html#method-c-find_or_create_by_name","(artist_name)",""],["find_or_create_by_names_list","Services::Musicbrainz::MusicbrainzArtist","Services/Musicbrainz/MusicbrainzArtist.html#method-c-find_or_create_by_names_list","(artist_names)",""],["find_paginated_notifications_for_user","Repository::UserActivities","Repository/UserActivities.html#method-i-find_paginated_notifications_for_user","(user, params)",""],["find_popular","Repository::Artists","Repository/Artists.html#method-i-find_popular","()","<p>Returns a list of popular artists\n"],["find_previous","Repository::Albums","Repository/Albums.html#method-i-find_previous","(album, track)",""],["find_random_popular","Repository::Artists","Repository/Artists.html#method-i-find_random_popular","(qty = 20)","<p>Finds a list of the qty first popular artist by random order.\n"],["find_remote","Services::Lastfm::LastfmAlbum","Services/Lastfm/LastfmAlbum.html#method-c-find_remote","(album)","<p>Fetches album details on LastFM based on a name.\n"],["find_remote","Services::Musicbrainz::MusicbrainzAlbum","Services/Musicbrainz/MusicbrainzAlbum.html#method-c-find_remote","(album)","<p>Finds an artist using the MusicBrainz API using the known fields in the\nalbum entity.\n"],["find_remote","Services::Musicbrainz::MusicbrainzArtist","Services/Musicbrainz/MusicbrainzArtist.html#method-c-find_remote","(artist)","<p>Finds an artist using the MusicBrainz API using the known fields in the\nartist entity.\n"],["find_remote_album","Services::Musicbrainz::MusicbrainzAlbum","Services/Musicbrainz/MusicbrainzAlbum.html#method-c-find_remote_album","(album)",""],["find_remote_artist","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-find_remote_artist","(artist)","<p>Fetches artist details on LastFM based on a name.\n"],["find_remote_by_name","Services::Musicbrainz::MusicbrainzArtist","Services/Musicbrainz/MusicbrainzArtist.html#method-c-find_remote_by_name","(name)","<p>Finds an artist using the MusicBrainz API using the known fields in the\nartist entity.\n"],["find_remote_releases","Services::Musicbrainz::MusicbrainzAlbum","Services/Musicbrainz/MusicbrainzAlbum.html#method-c-find_remote_releases","(album)",""],["find_remote_tracks","Services::Musicbrainz::MusicbrainzAlbum","Services/Musicbrainz/MusicbrainzAlbum.html#method-c-find_remote_tracks","(album)",""],["find_with_no_tracks","Repository::Albums","Repository/Albums.html#method-i-find_with_no_tracks","()","<p>Lists artists that have no discography attached.\n"],["find_with_no_tracks","Repository::AlbumsTracks","Repository/AlbumsTracks.html#method-i-find_with_no_tracks","()","<p>Lists artists that have no discography attached.\n"],["find_with_tracks","Repository::Albums","Repository/Albums.html#method-i-find_with_tracks","()","<p>Lists artists that have discographies.\n"],["find_with_tracks","Repository::AlbumsTracks","Repository/AlbumsTracks.html#method-i-find_with_tracks","()","<p>Lists artists that have discographies.\n"],["format_pretty","Services::Base","Services/Base.html#method-c-format_pretty","(json)","<p>Formats and indents json data and allows one to debug API answers from the\nconsole.\n"],["format_similar_arists","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-format_similar_arists","(remote_data)",""],["format_working_file","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-format_working_file","(type, size)",""],["generate_slug","Entity::Slugged","Entity/Slugged.html#method-i-generate_slug","()","<p>Generates a slug based on entity attributes\n"],["generate_thumbnail","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-generate_thumbnail","(entity)","<p>Generates a thumbnail for an entity\n"],["generate_thumbnails","Services::S3::S3AlbumThumbnail","Services/S3/S3AlbumThumbnail.html#method-c-generate_thumbnails","()",""],["generate_thumbnails","Services::S3::S3ArtistThumbnail","Services/S3/S3ArtistThumbnail.html#method-c-generate_thumbnails","()",""],["generate_top_artists_datalist","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-generate_top_artists_datalist","(data)","<p>Formats a resultset of API data into a known data structure\n"],["get_bucket","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-get_bucket","()",""],["get_client","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-get_client","()",""],["get_info_context","Utils::TmtLogger","Utils/TmtLogger.html#method-i-get_info_context","(source)",""],["get_prefix","Utils::TmtLogger","Utils/TmtLogger.html#method-i-get_prefix","()",""],["get_thumbnail_key","Entity::Thumbnailed","Entity/Thumbnailed.html#method-i-get_thumbnail_key","()",""],["get_thumbnail_key_for","Entity::Thumbnailed","Entity/Thumbnailed.html#method-i-get_thumbnail_key_for","(type)",""],["get_thumbnail_url","Entity::Thumbnailed","Entity/Thumbnailed.html#method-i-get_thumbnail_url","(type = \"thumb\")",""],["get_type_info","Utils::TmtLogger","Utils/TmtLogger.html#method-i-get_type_info","()",""],["get_type_warn","Utils::TmtLogger","Utils/TmtLogger.html#method-i-get_type_warn","()",""],["get_video_key","Services::Youtube::YoutubeVideo","Services/Youtube/YoutubeVideo.html#method-c-get_video_key","(track)",""],["get_warn_context","Utils::TmtLogger","Utils/TmtLogger.html#method-i-get_warn_context","(source)",""],["github","Services::Github::GithubIssue","Services/Github/GithubIssue.html#method-c-github","()","<p>Returns a Github connection.\n"],["has_next?","Repository::Albums","Repository/Albums.html#method-i-has_next-3F","(album, track)",""],["has_previous?","Repository::Albums","Repository/Albums.html#method-i-has_previous-3F","(album, track)",""],["has_unread_notifications?","Entity::User","Entity/User.html#method-i-has_unread_notifications-3F","()",""],["has_unread_notifications?","Repository::UserActivities","Repository/UserActivities.html#method-i-has_unread_notifications-3F","(user)",""],["homepage","TmtController","TmtController.html#method-i-homepage","()",""],["how_to","Services::TMTAchievement::CreatedAccount","Services/TMTAchievement/CreatedAccount.html#method-i-how_to","()",""],["index","AchievementsController","AchievementsController.html#method-i-index","()",""],["index","ArtistsController","ArtistsController.html#method-i-index","()",""],["index","NotificationsController","NotificationsController.html#method-i-index","()",""],["index","SearchController","SearchController.html#method-i-index","()",""],["lastfm_expiration_date","Repository::Behavior::Lastfmd","Repository/Behavior/Lastfmd.html#method-i-lastfm_expiration_date","()","<p>Lastfm only needs to update once a month.\n"],["legal","TmtController","TmtController.html#method-i-legal","()",""],["linked_obj","Entity::UserActivity","Entity/UserActivity.html#method-i-linked_obj","()",""],["load_meta","ApplicationController","ApplicationController.html#method-i-load_meta","()",""],["log","Utils::TmtLogger","Utils/TmtLogger.html#method-i-log","(message)",""],["login","SessionsController","SessionsController.html#method-i-login","()",""],["make_all_unpopular","Repository::Artists","Repository/Artists.html#method-i-make_all_unpopular","()",""],["mark_user_notifications_read","Repository::UserActivities","Repository/UserActivities.html#method-i-mark_user_notifications_read","(user)",""],["meta_description","Entity::Album","Entity/Album.html#method-i-meta_description","()",""],["meta_description","Entity::Artist","Entity/Artist.html#method-i-meta_description","()",""],["meta_description","Entity::Track","Entity/Track.html#method-i-meta_description","()",""],["meta_description","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-meta_description","()",""],["meta_keywords","Entity::Album","Entity/Album.html#method-i-meta_keywords","()",""],["meta_keywords","Entity::Artist","Entity/Artist.html#method-i-meta_keywords","()",""],["meta_keywords","Entity::Track","Entity/Track.html#method-i-meta_keywords","()",""],["meta_keywords","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-meta_keywords","()",""],["meta_title","Entity::Album","Entity/Album.html#method-i-meta_title","()",""],["meta_title","Entity::Artist","Entity/Artist.html#method-i-meta_title","()",""],["meta_title","Entity::Track","Entity/Track.html#method-i-meta_title","()",""],["meta_title","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-meta_title","()",""],["musicbrainz_expiration_date","Repository::Behavior::Musicbrainzed","Repository/Behavior/Musicbrainzed.html#method-i-musicbrainz_expiration_date","()","<p>Update MB every week in other to catch new releases\n"],["next","Entity::Album","Entity/Album.html#method-i-next","(track)",""],["next","Entity::Track","Entity/Track.html#method-i-next","()",""],["next?","Entity::Album","Entity/Album.html#method-i-next-3F","(track)",""],["next?","Entity::Track","Entity/Track.html#method-i-next-3F","()",""],["not_found","ApplicationController","ApplicationController.html#method-i-not_found","()",""],["number_of_rewarded","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-number_of_rewarded","()",""],["oembed","ServicesController","ServicesController.html#method-i-oembed","()",""],["okstfu","AjaxController","AjaxController.html#method-i-okstfu","()","<p>Marks user notifications as &#39;read&#39;\n"],["parse_key","Services::Youtube::YoutubeVideo","Services/Youtube/YoutubeVideo.html#method-c-parse_key","(response)",""],["pct","ApplicationHelper","ApplicationHelper.html#method-c-pct","(value, total)",""],["player_attributes","Entity::Track","Entity/Track.html#method-i-player_attributes","()",""],["populate_discography","Services::Musicbrainz::MusicbrainzArtist","Services/Musicbrainz/MusicbrainzArtist.html#method-c-populate_discography","(artist)","<p>Populates the discography of an artist entity.\n"],["populate_trackless","Services::Musicbrainz::MusicbrainzAlbum","Services/Musicbrainz/MusicbrainzAlbum.html#method-c-populate_trackless","()","<p>Populates the albums with empty tracks by querying MusicBrainz&#39;\ndatabase.\n"],["populate_trackless_album","Services::Musicbrainz::MusicbrainzAlbum","Services/Musicbrainz/MusicbrainzAlbum.html#method-c-populate_trackless_album","(album)",""],["prepare_similar_artists_by_names","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-prepare_similar_artists_by_names","(names)",""],["previous","Entity::Album","Entity/Album.html#method-i-previous","(track)",""],["previous","Entity::Track","Entity/Track.html#method-i-previous","()",""],["previous?","Entity::Album","Entity/Album.html#method-i-previous-3F","(track)",""],["previous?","Entity::Track","Entity/Track.html#method-i-previous-3F","()",""],["query_params","AjaxController","AjaxController.html#method-i-query_params","()",""],["release_date_formated","Entity::Album","Entity/Album.html#method-i-release_date_formated","()",""],["reload_current_user","ApplicationController","ApplicationController.html#method-i-reload_current_user","()",""],["remote_top_artists","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-remote_top_artists","()","<p>Fetches the list of current top artists on LastFm.\n"],["report","Services::Github::GithubIssue","Services/Github/GithubIssue.html#method-c-report","(data)","<p>Generates a bug report based on known post values.\n"],["require_login","ApplicationController","ApplicationController.html#method-i-require_login","()",""],["reviewer","AjaxController","AjaxController.html#method-i-reviewer","()",""],["reviewer_album_params","AjaxController","AjaxController.html#method-i-reviewer_album_params","()",""],["reviewer_track_params","AjaxController","AjaxController.html#method-i-reviewer_track_params","()",""],["reward!","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-reward-21","(user)","<p>Rewards the current achievement to the user\n"],["reward_account_creation","Entity::User","Entity/User.html#method-i-reward_account_creation","()",""],["rewarded?","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-rewarded-3F","(user)","<p>Checks if the user has been rewarded the achievement\n"],["save_and_filter_album_list","Services::Musicbrainz::MusicbrainzAlbum","Services/Musicbrainz/MusicbrainzAlbum.html#method-c-save_and_filter_album_list","(artist, release_groups)","<p>Creates a list of albums and associates them to an artist\n"],["save_and_filter_track_list","Services::Musicbrainz::MusicbrainzTrack","Services/Musicbrainz/MusicbrainzTrack.html#method-c-save_and_filter_track_list","(album, possibletracks)",""],["search","AlbumsController","AlbumsController.html#method-i-search","()",""],["search","ArtistsController","ArtistsController.html#method-i-search","()",""],["search","Repository::Behavior::Searchable","Repository/Behavior/Searchable.html#method-i-search","(criteria, limit = 10)","<p>stackoverflow.com/questions/22435780/how-to-order-results-by-closest-match-to-query\n"],["search","TracksController","TracksController.html#method-i-search","()",""],["search_order","Repository::Behavior::Searchable","Repository/Behavior/Searchable.html#method-i-search_order","()",""],["search_order_field","Repository::Artists","Repository/Artists.html#method-i-search_order_field","()",""],["search_where","Repository::Behavior::Searchable","Repository/Behavior/Searchable.html#method-i-search_where","(criteria)",""],["search_where_field","Repository::Artists","Repository/Artists.html#method-i-search_where_field","()",""],["send_to_bucket","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-send_to_bucket","(thumbnail_key, formatted_thumbnail)",""],["show","AchievementsController","AchievementsController.html#method-i-show","()",""],["show","AlbumsController","AlbumsController.html#method-i-show","()",""],["show","ArtistsController","ArtistsController.html#method-i-show","()",""],["show","TracksController","TracksController.html#method-i-show","()",""],["slug","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-slug","()",""],["slug_exists?","Repository::Behavior::Slugged","Repository/Behavior/Slugged.html#method-c-slug_exists-3F","(entity, slug)","<p>TODO : This is horrible. Make it suck less. I can&#39;t figure out why\nentity.class keeps on using the …\n"],["slug_params","AjaxController","AjaxController.html#method-i-slug_params","()",""],["tempdir","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-tempdir","()",""],["title","Entity::UserActivity","Entity/UserActivity.html#method-i-title","()",""],["title","Services::TMTAchievement::CreatedAccount","Services/TMTAchievement/CreatedAccount.html#method-i-title","()",""],["title","Services::TMTAchievement::CreatedAccount2","Services/TMTAchievement/CreatedAccount2.html#method-i-title","()",""],["title_context","Entity::Album","Entity/Album.html#method-i-title_context","()",""],["title_context","Entity::Artist","Entity/Artist.html#method-i-title_context","()",""],["title_context","Entity::Track","Entity/Track.html#method-i-title_context","()",""],["title_context","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-title_context","()",""],["to_file_path","Services::S3::S3Thumbnail","Services/S3/S3Thumbnail.html#method-c-to_file_path","(file)",""],["to_json","Services::Github::GithubReport","Services/Github/GithubReport.html#method-i-to_json","(*a)",""],["to_labels","Services::Github::GithubIssue","Services/Github/GithubIssue.html#method-c-to_labels","(data)","<p>Generates bug tags from data.\n"],["to_map","Services::Github::GithubReport","Services/Github/GithubReport.html#method-i-to_map","()",""],["to_meta_tags","MetatagsHelper","MetatagsHelper.html#method-c-to_meta_tags","(meta, request)",""],["to_oembed_hash","Entity::Oembedable","Entity/Oembedable.html#method-i-to_oembed_hash","()",""],["to_param","Entity::Slugged","Entity/Slugged.html#method-c-to_param","()",""],["to_summary","Services::Github::GithubIssue","Services/Github/GithubIssue.html#method-c-to_summary","(data)","<p>Generates a bug summary from data\n"],["to_title","Services::Github::GithubIssue","Services/Github/GithubIssue.html#method-c-to_title","(data)","<p>Generates a bug title from data\n"],["track_search","AjaxController","AjaxController.html#method-i-track_search","()",""],["truncate_title","Track","Track.html#method-i-truncate_title","()",""],["type","Entity::UserActivity","Entity/UserActivity.html#method-i-type","()",""],["unique?","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-unique-3F","()","<p>Allow classes to specify if they increment values of it it&#39;s a unique\nmatch\n"],["unread_notifications","Repository::UserActivities","Repository/UserActivities.html#method-i-unread_notifications","(user)",""],["unread_notifications_count","Entity::User","Entity/User.html#method-i-unread_notifications_count","()",""],["unsupported_length_replacement","Entity::Slugged","Entity/Slugged.html#method-i-unsupported_length_replacement","()",""],["update","ProfilesController","ProfilesController.html#method-i-update","()",""],["update_album_profile","Services::Lastfm::LastfmAlbum","Services/Lastfm/LastfmAlbum.html#method-c-update_album_profile","(album)","<p>Updates a TMT album profile from the information on LastFM\n"],["update_artist_profile","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-update_artist_profile","(artist)","<p>Updates a TMT artist profile from the information on LastFM\n"],["update_automated","Services::Github::GithubIssue","Services/Github/GithubIssue.html#method-c-update_automated","(data)","<p>Updates an existing bug report and updates it on the Github repo.\n"],["update_expired","Services::Lastfm::LastfmAlbum","Services/Lastfm/LastfmAlbum.html#method-c-update_expired","()","<p>Updates expired albums on TMT.\n"],["update_expired","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-update_expired","()","<p>Updates expired artists on TMT.\n"],["update_expired","Services::Musicbrainz::MusicbrainzArtist","Services/Musicbrainz/MusicbrainzArtist.html#method-c-update_expired","()","<p>Populates the artists with empty discographies by querying MusicBrainz&#39;\ndatabase.\n"],["update_expired_artist","Services::Musicbrainz::MusicbrainzArtist","Services/Musicbrainz/MusicbrainzArtist.html#method-c-update_expired_artist","(artist)",""],["update_popular","Repository::Artists","Repository/Artists.html#method-i-update_popular","(artists)","<p>Updates a set of artists and marks them as current being popular.\n"],["update_tmt_top_artists","Services::Lastfm::LastfmArtist","Services/Lastfm/LastfmArtist.html#method-c-update_tmt_top_artists","()","<p>Update the list of popular artists on TMT.\n"],["user_was_rewarded?","Repository::UserActivities","Repository/UserActivities.html#method-i-user_was_rewarded-3F","(user, reward)",""],["validates?","Services::TMTAchievement::Base","Services/TMTAchievement/Base.html#method-i-validates-3F","(user)","<p>Specifies if there is custom validation to be executed before saving the\nachievement\n"],["view","ProfilesController","ProfilesController.html#method-i-view","()",""],["viewed?","Entity::UserActivity","Entity/UserActivity.html#method-i-viewed-3F","()",""],["warn","Utils::TmtLogger","Utils/TmtLogger.html#method-i-warn","(message)",""],["whatsup","AjaxController","AjaxController.html#method-i-whatsup","()","<p>Checks for user notifications TODO: This could be pushed instead\n"],["with_no_thumbnail","Repository::Behavior::Thumbnailed","Repository/Behavior/Thumbnailed.html#method-i-with_no_thumbnail","()",""],["youtube_expiration_date","Repository::Behavior::Youtubed","Repository/Behavior/Youtubed.html#method-i-youtube_expiration_date","()","<p>Lastfm only needs to update once a month.\n"],["youtube_key_is_expired?","Repository::Behavior::Youtubed","Repository/Behavior/Youtubed.html#method-i-youtube_key_is_expired-3F","(entity)",""],["yt_key","AjaxController","AjaxController.html#method-i-yt_key","()","<p>Returns the information of the youtube video required to play a requested\nsong.\n"],["README","","README_rdoc.html","",""]]}}