{"version":3,"sources":["globals.js","event-emitter.js","app.js","profile.js","ajax-form.js","player.js","upvote-form.js","search-form.js","notifier.js","knob.js","reviewer.js","canvas.js","vector.js","particle.js","particle-emitter.js","ajax-forms-initializer.js","player-initializer.js","reviewer-initializer.js","profile-initializer.js","search-initializer.js","upvote-forms-initializer.js"],"names":[],"mappingshHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvzrvhUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"app.js","sourcesContent":["\"use strict\";\n\n$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n});\n\n\n/**\n * Globally exposed namespacing function.\n * @public\n * @param {string} namespace\n * @return {object} A referene to the object created\n */\nfunction namespace(namespace) {\n    var object = window, tokens = namespace.split(\".\"), token;\n\n    while (tokens.length > 0) {\n        token = tokens.shift();\n\n        if (typeof object[token] === \"undefined\") {\n            object[token] = {};\n        }\n\n        object = object[token];\n    }\n\n    return object;\n}\n\n/**\n * Globally exposed extending function.\n * @param {object} target\n * @param {hash} source\n * @return {object}\n */\nfunction extend(target, source) {\n    target = target || {};\n    for (var prop in source) {\n        if (typeof source[prop] === 'object') {\n            target[prop] = extend(target[prop], source[prop]);\n        } else {\n            target[prop] = source[prop];\n        }\n    }\n    return target;\n}\n\n/**\n * Sets up inheritance of the child object to the objects\n * supplied by the parents object.\n * @param {array} parents\n * @param {object} child\n * @param {hash} properties\n * @return {object} An object with inheritance\n */\nfunction inherit(parents, child, properties) {\n    var childPrototype = properties;\n\n    for (var i in parents) {\n        var parentPrototype = Object.create(parents[i].prototype);\n        childPrototype = extend(parentPrototype, childPrototype);\n    }\n\n    child.prototype = childPrototype;\n    child.prototype.constructor = child;\n\n    return child;\n}\n\n/**\n * Globally filters out jQuery elements matching selector\n * from the haystack. This expects javascript objects that\n * have a public \"getRootNode\" method.\n * @param {string} selector\n * @param {array} haystack\n * @return {array} matches\n */\nfunction filter(selector, haystack) {\n    var matches = [];\n\n    haystack.forEach(function (hay) {\n        var node = hay.getRootNode();\n        if (node && node.is(selector)) {\n            matches.push(hay);\n        }\n    });\n\n    return matches;\n}\n\n\nfunction debounce(func, threshold, execAsap) {\n    var timeout;\n\n    return function debounced() {\n        var obj = this, args = arguments;\n        function delayed() {\n            if (!execAsap)\n                func.apply(obj, args);\n            timeout = null;\n        };\n\n        if (timeout)\n            clearTimeout(timeout);\n        else if (execAsap)\n            func.apply(obj, args);\n\n        timeout = setTimeout(delayed, threshold || 100);\n    };\n}\n","(function (undefined) {\n\n    \"use strict\";\n\n    /**\n     * @namespace Tmt.EventEmitter\n     * @property {array} events A collection of object events and callbacks.\n     */\n    var EventEmitter = namespace(\"Tmt\").EventEmitter = function() {\n        this.events = null;\n    };\n\n    inherit([Evemit], namespace(\"Tmt\").EventEmitter, {\n\n        /**\n         * Initializes the event emitter object.\n         * @method\n         * @public\n         */\n        'initialize': function () {\n            // Exposing the creation in a prototype method\n            // ensures child classes will have an instantiated value\n            // even if they don't go through the constructor.\n            this.events = {};\n        }\n    });\n\n}());\n","(function (undefined) {\n\n    \"use strict\";\n\n    /**\n     * The global wrapper for the application instance.\n     * @namespace Tmt.App\n     * @extends {Tmt.EventEmitter}\n     * @property {Tmt.Models.Profile} profile - An active session profile\n     * @property {Array} initializers - An array of Tmt.Initializers object.\n     */\n    var App = namespace(\"Tmt\").App = function () {\n        this.profile = null;\n        this.initializers = [];\n\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], App, {\n\n        /**\n         * Boots the application instance\n         * @public\n         * @method\n         */\n        boot: function () {\n            this.profile = new Tmt.Models.Profile();\n            prepareInitializers.call(this);\n            this.emit(\"ready\", this);\n        },\n\n        /**\n         * Assigns session data from PHP to this javascript\n         * session instance.\n         * @method\n         * @public\n         */\n        setData: function (data) {\n            if (data.profile) {\n                this.profile.setData(data.profile);\n                this.emit('profileFirstPopulated', this, this.profile);\n            }\n\n            this.emit('configured', this);\n        }\n    });\n\n    /**\n     * Loads all initializer objects that it can dynamically find\n     * in the Tmt.Initializers namespace and then builds them.\n     * @method\n     * @private\n     */\n    function prepareInitializers() {\n        // Create an intance of each initializer.\n        for (var type in Tmt.Initializers) {\n            this.initializers[type] = new Tmt.Initializers[type]();\n        }\n\n        // Run the initialization. This is done in two steps because\n        // initializers may depend on one another.\n        for (var type in this.initializers) {\n            this.initializers[type].build(this);\n        }\n    }\n\n}());\n","(function (undefined) {\n\n    \"use strict\";\n\n    /**\n     * The Profile object is the frontend equivalent of the\n     * backend Profile model.\n     * @namespace Tmt.Models.Profile\n     * @property {array} albumUpvotes\n     * @property {array} trackUpvotes\n     * @property {array} activities\n     */\n    var Profile = namespace(\"Tmt.Models\").Profile = function () {\n        this.notifications = [];\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], Profile, {\n\n        /**\n         * Applies backend session data to the object.\n         * @param {hash} userData\n         * @public\n         * @method\n         * @fires Profile#upvoteSet\n         */\n        setData: function (userData) {\n            this.username = userData.username;\n            this.email = userData.email;\n            this.slug = userData.slug;\n            this.name = userData.name;\n            this.id = userData.id;\n            this.emit(\"dataChange\", this);\n\n           // this.albumUpvotes = indexUpvotes(\"albumUpvotes\", userData);\n            this.albumUpvotes = userData.albumUpvotes;\n            this.emit(\"upvoteChange\", \"album\", this.albumUpvotes);\n\n            // this.trackUpvotes = indexUpvotes(\"trackUpvotes\", userData);\n            this.trackUpvotes = userData.trackUpvotes;\n            this.emit(\"upvoteChange\", \"track\",this.trackUpvotes);\n        },\n\n        /**\n         * Adds a new vote value to the current profile\n         * @param {string} type One of track or album\n         * @param {string} key The {type}'s id\n         * @param {string} value\n         * @fires Profile#upvoteUpdate\n         * @public\n         * @method\n         */\n        addUpvote: function (type, key, value) {\n            if (type == \"album\") {\n                return this.addAlbumUpvote(key, value);\n            } else if (type == \"track\") {\n                return this.addTrackUpvote(key, value);\n            }\n        },\n\n        /**\n         * Add a new album vote\n         * @param {string} key album id\n         * @param {string} value\n         * @fires Profile#upvoteUpdate\n         * @public\n         * @method\n         */\n        addAlbumUpvote: function (key, value) {\n            this.albumUpvotes[key] = value;\n            this.emit(\"upvoteUpdate\", \"album\", this.albumUpvotes);\n        },\n\n        /**\n         * Add a new track vote\n         * @param {string} key track id\n         * @param {string} value\n         * @fires Profile#upvoteUpdate\n         * @public\n         * @method\n         */\n        addTrackUpvote: function (key, value) {\n            this.trackUpvotes[key] = value;\n            this.emit(\"upvoteUpdate\", \"track\", this.trackUpvotes);\n        },\n\n        /**\n         * Removes an existing vote value to the current profile\n         * @param {string} type One of track or album\n         * @param {string} key The {type}'s id\n         * @fires Profile#upvoteUpdate\n         * @public\n         * @method\n         */\n        removeUpvote: function (type, key) {\n            if (type == \"album\") {\n                return this.removeAlbumUpvote(key, value);\n            } else if (type == \"track\") {\n                return this.removeTrackUpvote(key, value);\n            }\n        },\n\n        /**\n         * Removes an existing album vote\n         * @param {string} key album id\n         * @param {string} value\n         * @fires Profile#upvoteUpdate\n         * @public\n         * @method\n         */\n        removeAlbumUpvote: function (type, key) {\n            delete this.albumUpvotes[key];\n            this.emit(\"upvoteUpdate\", \"album\", this.upvotes);\n        },\n\n        /**\n         * Removes an existing track vote\n         * @param {string} key track id\n         * @param {string} value\n         * @fires Profile#upvoteUpdate\n         * @public\n         * @method\n         */\n        removeTrackUpvote: function (type, key) {\n            delete this.trackUpvotes[key];\n            this.emit(\"upvoteUpdate\", \"track\", this.upvotes);\n        },\n\n        /**\n         * Adds a user activity notification (viewed or not)\n         * @param {hash} notification\n         * @fires Profile#notification\n         * @public\n         * @method\n         */\n        addNotification : function (notification) {\n            this.notifications.push(notification);\n\n            if (this.notifications.length > 10) {\n                this.notifications.length = 10;\n            }\n\n            this.emit(\"notification\", notification);\n        },\n\n        getVoteByObjectId : function (type, objectId) {\n            var match = null;\n\n            if (type == \"track\") {\n                match = this.trackUpvotes[objectId];\n            } else if (type == \"album\") {\n                match = this.albumUpvotes[objectId];\n            }\n\n            if (match) {\n                return match.vote;\n            }\n        }\n    });\n\n    /**\n     * Data saved in the database is not easily serachable\n     * in javascript. This method bridges the two.\n     * @param {string} key one of track or album\n     * @param {hash} data values as stored in the BD\n     * @return {hash} A javascript-oriented indexed object\n     * @private\n     * @method\n     */\n    // function indexUpvotes(key, data) {\n    //     var indexed = [];\n    //     if (data && data[key]) {\n    //         for (var i in data[key]) {\n    //             var id = data[key][i].id,\n    //                 value = data[key][i].vote;\n\n    //             indexed[id] = value;\n    //         }\n    //     }\n    //     return indexed;\n    // }\n\n}());\n","(function () {\n\n    \"use strict\";\n\n    /**\n     * A form object that can be captured using ajax.\n     * @param {jQuery} el\n     */\n    var AjaxForm = namespace(\"Tmt.Components\").AjaxForm = function (el) {\n        this.rootNode = el;\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], AjaxForm, {\n        initialize: function () {\n            Tmt.EventEmitter.prototype.initialize.call(this);\n            addEvents.call(this);\n        },\n\n        getRootNode: function () {\n            return this.rootNode;\n        }\n    });\n\n\n    function addEvents() {\n        this.rootNode.on(\"submit\", onSubmit.bind(this));\n        this.emit(\"bound\", this);\n    }\n\n    function onSubmit(event) {\n        event.preventDefault();\n\n        this.rootNode.addClass(\"working\");\n        this.emit(\"beforeSubmit\", this, event);\n\n        $.ajax({\n            url: this.rootNode.attr(\"action\"),\n            data: new FormData(this.rootNode.get(0)),\n            cache: false,\n            processData: false,\n            contentType: false,\n            type: this.rootNode.attr('method'),\n            success: onSubmitSuccess.bind(this)\n        });\n\n        this.emit(\"submit\", this);\n    }\n\n    function onSubmitSuccess(response) {\n        this.rootNode.removeClass(\"working\");\n        this.emit(\"submitSuccess\", response, this);\n    }\n\n}());\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var Player = namespace(\"Tmt.Components\").Player = function (element) {\n        this.rootNode = element;\n        this.ready = false;\n        this.embed = null;\n        this.ytPlayer = null;\n        this.playing = false;\n        this.canSkip = true;\n        this.range = null;\n\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], Player, {\n        'isReady' : function() {\n            return this.ready;\n        },\n\n        'isPlaying' : function() {\n            return this.playing;\n        },\n\n        'getStreamer' : function() {\n            return this.ytPlayer;\n        },\n\n        'render': function () {\n            this.hasVideoId() ?\n                embedVideo.call(this) :\n                queryForKey.call(this);\n        },\n\n        'getEmbedId': function () {\n            if (this.hasVideoId()) {\n                return \"tmt_player_\" + this.getVideoId();\n            }\n        },\n\n        'getVideoId': function () {\n            return this.rootNode.data(\"song-vid\");\n        },\n\n        'setVideoId': function (id) {\n            this.rootNode.data(\"song-vid\", id);\n        },\n\n        'hasVideoId': function () {\n            return this.getVideoId() != \"\";\n        },\n\n        'getSongSlug': function () {\n            return this.rootNode.data(\"song-slug\");\n        }\n    });\n\n    function queryForKey() {\n        $.getJSON('/ajax/ytkey/' + this.getSongSlug(), onYtKeyReceived.bind(this));\n    }\n\n    function onYtKeyReceived(response) {\n        if (response.youtubekey.length === 11) {\n            this.setVideoId(response.youtubekey);\n            embedVideo.call(this);\n        }\n    }\n\n    function embedVideo() {\n        var id = this.getEmbedId();\n        var iframeHtml =\n            '<iframe id=\"' + id + '\" scrolling=\"no\" marginwidth=\"0\" ' +\n            'marginheight=\"0\" frameborder=\"0\" src=\"//www.youtube.com/embed/' +\n            this.getVideoId() + '?enablejsapi=1&amp;iv_load_policy=3&amp;' +\n            'playerapiid=songplayer_component_17&amp;disablekb=1&amp;wmode=transparent&amp;controls=0' +\n            '&amp;playsinline=0&amp;showinfo=0&amp;modestbranding=1&amp;rel=0&amp;' +\n            'autoplay=0&amp;loop=0&amp;origin=' + window.location.origin + '\"></iframe>'\n\n        this.rootNode.append(iframeHtml);\n        this.embed = $(\"#\" + id);\n\n        this.ytPlayer = new YT.Player(id);\n        this.ytPlayer.addEventListener('onReady', onPlayerReady.bind(this));\n        this.ytPlayer.addEventListener('onStateChange', onPlayerStateChange.bind(this));\n\n        this.ready = true;\n        this.emit(\"embeded\", this);\n    }\n\n    function onPlayerStateChange(newState) {\n        /*\n        -1 (unstarted)\n        0 (ended)\n        1 (playing)\n        2 (paused)\n        3 (buffering)\n        5 (video queued) */\n        var controlButton = this.rootNode.find('.play');\n\n        if (newState.data > -1) {\n            if (newState.data === 1) {\n                controlButton.removeClass(\"fa-play\");\n                controlButton.addClass(\"fa-pause\");\n\n                this.playing = true;\n                this.emit(\"play\");\n                onPlayerTick.call(this);\n\n            } else if (newState.data === 0) {\n                controlButton.removeClass(\"fa-pause\");\n                controlButton.addClass(\"fa-play\");\n\n                this.playing = false;\n                this.emit(\"completed\");\n\n            } else {\n                controlButton.removeClass(\"fa-pause\");\n                controlButton.addClass(\"fa-play\");\n\n                this.playing = false;\n                this.emit(\"stop\");\n            }\n        }\n    }\n\n    function onProgressClick(e) {\n        if (this.playing) {\n            var progressBar = this.rootNode.find(\".progress-wrap .progress\"),\n                offset = progressBar.offset(),\n                relX = e.pageX - offset.left,\n                pctLocation = relX / progressBar.width();\n            this.ytPlayer.seekTo(pctLocation * this.ytPlayer.getDuration(), true);\n        }\n    };\n\n    function onPlayBtnClick(e) {\n        // Ranges wil be back shortly\n        this.playingRange = null;\n\n        (this.ytPlayer.getPlayerState() != 1) ?\n            this.ytPlayer.playVideo() :\n            this.ytPlayer.pauseVideo();\n    }\n\n\n    function onPlayerReady(event) {\n        this.rootNode.find(\".duration\").html(toReadableTime(this.ytPlayer.getDuration()));\n        this.rootNode.find(\".position\").html(toReadableTime(0));\n        this.rootNode.find(\".progress-wrap .progress\").click(onProgressClick.bind(this));\n\n        var playBtn = this.rootNode.find('.play');\n        playBtn.removeClass(\"fa-stop\");\n        playBtn.addClass(\"fa-play\");\n        playBtn.click(onPlayBtnClick.bind(this));\n\n        // Ranges wil be back shortly\n        // $(\"*[data-from]\").click(function () {\n        //     var el = $(this);\n        //     tmt.playingRange = [parseInt(el.attr(\"data-from\"), 10), parseInt(el.attr(\"data-to\"), 10)];\n        //     (player.getPlayerState() != 1) ? player.playVideo() : player.pauseVideo();\n        //     player.seekTo(tmt.playingRange[0], true);\n        // });\n    };\n\n    function onPlayerTick() {\n        var currentTime = this.ytPlayer.getCurrentTime(),\n            durationTime = this.ytPlayer.getDuration(),\n            currentPositionPct = (currentTime / durationTime) * 100;\n\n        this.rootNode.find('.position').html(toReadableTime(currentTime));\n\n        this.rootNode.find('.cursor').css(\"left\", currentPositionPct + \"%\");\n        this.rootNode.find('.progress .loaded-bar').css(\"width\", (this.ytPlayer.getVideoLoadedFraction() * 100) + \"%\");\n        this.rootNode.find('.progress .playing-bar').css(\"width\", currentPositionPct + \"%\");\n        this.rootNode.find('.progress .playing-bar').attr(\"aria-valuenow\", currentTime);\n\n        if (this.playing) {\n            // if (tmt.playingRange) {\n\n            //     if (currentTime >= tmt.playingRange[1]) {\n            //         tmt.playingRange = null;\n            //         player.pauseVideo();\n            //     }\n            //     else if (currentTime <= tmt.playingRange[0]) {\n            //         player.seekTo(tmt.playingRange[0], true);\n            //     }\n            // }\n            setTimeout(onPlayerTick.bind(this), 250);\n        }\n    }\n\n    function toReadableTime(seconds) {\n        var time = new Date(1000 * seconds),\n            mins = (\"0\" + time.getMinutes()).slice(-2),\n            secs = (\"0\" + time.getSeconds()).slice(-2);\n\n        return mins + \":\" + secs;\n    }\n\n})(jQuery);\n","(function ($, undefined) {\n\n    \"use strict\";\n\n\n    var UpvoteForm = namespace(\"Tmt.Components\").UpvoteForm = function (ajaxFormObj) {\n        this.ajaxForm = ajaxFormObj;\n        this.rootNode = ajaxFormObj.getRootNode();\n        this.enabled = false;\n\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], UpvoteForm, {\n\n        \"initialize\": function () {\n            Tmt.EventEmitter.prototype.initialize.call(this);\n\n            addEvents.call(this);\n            resetButtons.call(this);\n\n            this.rootNode.addClass('initialized');\n        },\n\n        \"getType\": function () {\n            return this.rootNode.data(\"upvote-type\");\n        },\n\n        \"getObjectId\": function () {\n            return this.rootNode.data(\"upvote-object-id\");\n        },\n\n        \"setObjectId\": function (id) {\n            return this.rootNode.data(\"upvote-object-id\", id);\n        },\n\n        \"isTrack\": function () {\n            return this.getType() == \"track\";\n        },\n\n        \"isAlbum\": function () {\n            return this.getType() == \"album\";\n        },\n\n        \"setValue\": function (value) {\n            this.rootNode.removeClass(\"liked disliked\");\n            this.rootNode.find(\"input[name=vote]\").val(value);\n\n            if (value == 1) {\n                this.rootNode.addClass(\"liked\");\n                enableButton(this.rootNode.find('button.up'));\n            } else if (value == 2) {\n                this.rootNode.addClass(\"disliked\");\n                this.rootNode.find('button.down').html('<i class=\"fa fa-thumbs-down\" aria-hidden=\"true\">');\n            } else {\n                resetButtons.call(this);\n            }\n\n            this.emit('valueChange', value, this);\n        },\n\n        \"getValue\": function () {\n            return this.rootNode.find(\"input[name=vote]\").val();\n        },\n\n        \"lock\": function () {\n            this.enabled = false;\n            this.rootNode.find(\"button\").attr(\"disabled\", \"disabled\");\n        },\n\n        \"unlock\": function () {\n            this.enabled = true;\n            this.rootNode.find(\"button\").removeAttr(\"disabled\");\n        }\n    });\n\n    function addEvents() {\n        this.rootNode.find(\"button\").click(onButtonClick.bind(this));\n        this.ajaxForm.on('submitSuccess', onSubmitSuccess.bind(this));\n    };\n\n    function resetButtons() {\n        this.rootNode.find('button.up').html('<i class=\"fa fa-thumbs-o-up\" aria-hidden=\"true\">');\n        this.rootNode.find('button.down').html('<i class=\"fa fa-thumbs-o-down\" aria-hidden=\"true\">');\n    }\n\n    function enableButton(button) {\n        if (button.hasClass(\"up\")) {\n            button.html('<i class=\"fa fa-thumbs-up\" aria-hidden=\"true\">');\n        }\n        if (button.hasClass(\"down\")) {\n            button.html('<i class=\"fa fa-thumbs-down\" aria-hidden=\"true\">');\n        }\n    }\n\n    function onButtonClick(evt) {\n        if (!this.enabled) {\n            return;\n        }\n\n        var $el = $(evt.target),\n            button = $el.parents('button'),\n            clickedValue = button.val();\n\n        if (clickedValue != this.getValue()) {\n            this.setValue(clickedValue);\n        } else {\n            // twice the same value means the user wants to cancel\n            this.setValue(-1);\n        }\n\n        this.lock();\n        this.rootNode.submit();\n    }\n\n    function onSubmitSuccess(response, ajaxForm) {\n        if (response && response.vote) {\n            this.setObjectId(response.id);\n            this.setValue(response.vote);\n        }\n\n        this.unlock();\n    }\n\n})(jQuery);\n","\n(function ($, undefined) {\n\n    \"use strict\";\n\n    var SearchForm = namespace(\"Tmt.Components\").SearchForm = function () {\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], SearchForm, {\n\n        \"initialize\": function () {\n            Tmt.EventEmitter.prototype.initialize.call(this);\n\n            // search box\n            var artistsSearch = new Bloodhound({\n                name: 'artists',\n                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('artist'),\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\n                remote: {\n                    url: '/ajax/artistSearch/?q=%QUERY',\n                    wildcard: '%QUERY'\n                }\n            }),\n                albumsSearch = new Bloodhound({\n                    name: 'albums',\n                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('album'),\n                    queryTokenizer: Bloodhound.tokenizers.whitespace,\n                    remote: {\n                        url: '/ajax/albumSearch/?q=%QUERY',\n                        wildcard: '%QUERY'\n                    }\n                }),\n                tracksSearch = new Bloodhound({\n                    name: 'tracks',\n                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('track'),\n                    queryTokenizer: Bloodhound.tokenizers.whitespace,\n                    remote: {\n                        url: '/ajax/trackSearch/?q=%QUERY',\n                        wildcard: '%QUERY'\n                    }\n                }),\n                searchBox = $('.typeahead');\n\n\n            // Listens for when Typeahead a selected a value.\n            function typeahead_onSelected(e, data, section) {\n                e.preventDefault();\n                document.location = $('.tt-cursor a:nth-child(1)').attr('href');\n            }\n\n            artistsSearch.initialize();\n            albumsSearch.initialize();\n            tracksSearch.initialize();\n\n            searchBox.on(\"typeahead:selected\", typeahead_onSelected);\n\n            searchBox.typeahead(\n                { minLength: 3, highlight: true, cache: true },\n                [\n                    {\n                        name: 'artists',\n                        display: 'artist',\n                        source: artistsSearch,\n                        cache: true,\n                        templates: {\n                            header: '<h3>Artists</h3>',\n                            empty: '<h3>Artists</h3><p class=\"empty-message\">Could not find matching artists.</p>',\n                            suggestion: function (data) { return ['<p><a href=\"/artists/' + data.slug + '/\">' + data.name + '</a></p>'].join(\"\"); }\n                        }\n                    },\n                    {\n                        name: 'albums',\n                        display: 'album',\n                        source: albumsSearch,\n                        cache: true,\n                        templates: {\n                            header: '<h3>Albums</h3>',\n                            empty: '<h3>Albums</h3><p class=\"empty-message\">Could not find matching albums.</p>',\n                            suggestion: function (data) { return ['<p><a href=\"/albums/' + data.slug + '/\">' + data.name + '</a> by <a href=\"/artists/' + data.artist.slug + '/\">' + data.artist.name + '</a></p>'].join(\"\"); }\n                        }\n                    },\n                    {\n                        name: 'tracks',\n                        display: 'track',\n                        source: tracksSearch,\n                        cache: true,\n                        templates: {\n                            header: '<h3>Tracks</h3>',\n                            empty: '<h3>Tracks</h3><p class=\"empty-message\">Could not find matching tracks.</p>',\n                            suggestion: function (data) { return ['<p><a href=\"/tracks/' + data.slug + '/\">' + data.name + '</a> by <a href=\"/artists/' + data.artist.slug + '/\">' + data.artist.name + '</a></p>'].join(\"\"); }\n                        }\n                    }\n                ]\n            );\n\n        }\n    });\n\n\n})(jQuery);\n","(function () {\n\n    \"use strict\";\n\n    var rootNode,\n        profile,\n        // sound,\n        notifications = [];\n\n    /**\n     * A user notifier control.\n     * @param {jQuery} el\n     */\n    var Notifier = namespace(\"Tmt.Components\").Notifier = function (el, profileObj) {\n        rootNode = el;\n        profile = profileObj;\n\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], Notifier, {\n        'initialize': function () {\n            Tmt.EventEmitter.prototype.initialize.call(this);\n\n            addEvents.call(this);\n            render.call(this);\n\n            addSound();\n        },\n\n        'hasNotifications': function () {\n            return notifications.length > 0;\n        },\n\n        'getAlertCount': function () {\n            var alertCount = 0;\n            for (var i = 0; i < notifications.length; i++) {\n                if (notifications[i]['must_notify'] > 0) {\n                    alertCount++;\n                }\n            }\n            return alertCount;\n        }\n    });\n\n    function render() {\n        this.hasNotifications() ?\n            rootNode.find('li.no-notices').hide() :\n            rootNode.find('li.no-notices').show();\n\n\n        var alertCount = this.getAlertCount(),\n            notice = rootNode.find('em');\n\n        notice.html(alertCount);\n        alertCount > 0 ?\n            notice.show() :\n            notice.hide();\n    }\n\n    function addEvents() {\n        rootNode.find('ul').click(onListClick.bind(this));\n        rootNode.find('button').click(onClearClick.bind(this));\n        profile.on(\"notification\", onNewNotification.bind(this));\n    };\n\n    function addSound() {\n        // We don't really have a way to telling if the notifications are actually new,\n        // or if a user navigated to another page while having unread notifications from the previous page.\n        // There are likely other similar cases where it wouldn't make sense to play a sound.\n        // Once we figure how to do it well, lets enable it.\n\n        // credit : https://notificationsounds.com/funny/surprise-on-a-spring-496\n        // sound = new Howl({ src: ['http://static.themusictank.com/assets/surprise-on-a-spring.mp3'] });\n    }\n\n    function onListClick(evt) {\n        if (evt.target.tagName.toLowerCase() == \"a\") {\n            evt.preventDefault();\n            var target = $(evt.target);\n\n            for (var i = 0; i < notifications.length; i++) {\n                if (notifications[i]['id'] == target.data(\"id\")) {\n                    notifications[i]['must_notify'] = 0;\n                    target.parent().removeClass(\"new\");\n                    target.parent().addClass(\"old\");\n                    break;\n                }\n            }\n\n            render.call(this);\n            this.emit('notificationRead', [target.data(\"id\")], target.href);\n        }\n    }\n\n    function onClearClick(evt) {\n        var ids = collectNewActivityIds.call(this);\n        if (ids.length > 0) {\n            for (var i = 0; i < notifications.length; i++) {\n                notifications[i]['must_notify'] = 0;\n            }\n            rootNode.find('li').removeClass(\"new\");\n            rootNode.find('li').addClass(\"old\");\n\n            render.call(this);\n            this.emit('notificationRead', ids);\n        }\n    }\n\n    function onNewNotification(notification) {\n\n        var label = notification['association_summary'] ? notification['association_summary'] : \"Notification\";\n\n        if (notification['associated_object_type'] === \"profile\") {\n            label = '<a data-id=\"' + notification['id'] + '\" href=\"/tankers/' + notification['associated_object']['slug'] + '\">' + notification['associated_object']['name'] + ' is now following you.</a>';\n        }\n\n        rootNode.find('ul').append('<li class=\"' + (notification['must_notify'] > 0 ? 'new' : 'old') + '\">' + label + '</li>');\n\n        notifications.push(notification);\n        if (notifications > 5) {\n            notifications = 5;\n        }\n\n        // if (notification['must_notify']) {\n        //     this.sound.play();\n        // }\n\n        render.call(this);\n    }\n\n    function collectNewActivityIds() {\n        var ids = [];\n        for (var i = 0; i < notifications.length; i++) {\n            if (notifications[i]['must_notify'] > 0) {\n                ids.push(notifications[i]['id']);\n            }\n        }\n        return ids;\n    }\n\n}());\n","(function ($, undefined) {\r\n\r\n    \"use strict\";\r\n\r\n    var Knob = namespace(\"Tmt.Components.Reviewer\").Knob = function (element) {\r\n        this.track = element;\r\n        this.knob = element.find('b');\r\n\r\n        this.enabled = false;\r\n        this.working = false;\r\n        this.position = null;\r\n        this.trackHeight = null;\r\n        this.draggable = null;\r\n        this.nudged = false;\r\n\r\n        this.value = 0;\r\n\r\n        addEvents.call(this);\r\n        saveCurrentPosition.call(this);\r\n    };\r\n\r\n    inherit([], Knob, {\r\n        enable: function () {\r\n            this.track.removeClass(\"disabled\");\r\n            this.track.addClass(\"enabled\");\r\n\r\n            this.draggable.enable();\r\n            this.enabled = true;\r\n        },\r\n\r\n        disable: function () {\r\n            this.track.addClass(\"disabled\");\r\n            this.track.removeClass(\"enabled\");\r\n\r\n            this.draggable.disable();\r\n            this.enabled = false;\r\n        },\r\n\r\n        setValue: function (value) {\r\n            this.value = value;\r\n\r\n            if (!this.working) {\r\n                var topPosition = this.trackHeight * (1 - value);\r\n                TweenMax.set(this.knob.get(0), { css: { y:  topPosition } });\r\n                this.draggable.update();\r\n            }\r\n        },\r\n\r\n        getValue: function () {\r\n            if (this.working) {\r\n                var value = 1 - (this.draggable.y / this.trackHeight);\r\n            } else {\r\n                var value = this.value;\r\n            }\r\n            \r\n            // Ensure we don't break boundries\r\n            if (value > 1)  {\r\n                return 1;\r\n            } else if (value < 0) {\r\n                return 0;\r\n            }\r\n\r\n            return value;\r\n        },\r\n\r\n        isWorking : function() {\r\n            return this.working;\r\n        },\r\n\r\n        isEnabled : function() {\r\n            return this.enabled;\r\n        },\r\n\r\n        stopCurrentDrag : function() {\r\n            this.draggable.disable();\r\n            this.draggable.enable();\r\n        },\r\n\r\n        nudge : function() {\r\n            this.nudged = true;\r\n            this.track.css({\r\n                'margin-top' : (Math.random() <= 0.5 ?  2 : -2) + \"px\",\r\n                'margin-left' : (Math.random() <= 0.5 ?  2 : -2) + \"px\"\r\n            });\r\n        },\r\n\r\n        center : function() {\r\n            if (this.nudged) {\r\n                this.track.css({\r\n                    'margin-top' : null,\r\n                    'margin-left' : null\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    function saveCurrentPosition() {\r\n        this.position = this.track.position();\r\n        this.trackHeight = this.track.innerHeight() - this.knob.outerHeight();\r\n    }\r\n\r\n    function addEvents() {\r\n        this.draggable = Draggable.create(this.knob.get(0), {\r\n            type: \"y\",\r\n            bounds: this.track.get(0),\r\n            onDragStart: onDragStart.bind(this),\r\n            onDragEnd: onDragEnd.bind(this),\r\n        })[0];\r\n    }\r\n\r\n    function onDragStart() {\r\n        this.working = true;\r\n    }\r\n\r\n    function onDragEnd() {\r\n        this.working = false;\r\n    }\r\n\r\n})(jQuery);\r\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var NEUTRAL_GROOVE_POINT = 0.500,\n        GROOVE_DECAY = 0.0005,\n        FRAMERATE = 26,\n        FRAMES_PER_SAVE = 10 * FRAMERATE,\n        HIGH_GROOVE_THRESHOLD = 0.98,\n        LOW_GROOVE_THRESHOLD = 0.02,\n        LENGTH_TO_SHAKE = 0.65 * FRAMERATE,\n        LENGTH_PER_SHAKE = 1.75 * FRAMERATE;\n\n\n    var Reviewer = namespace(\"Tmt.Components.Reviewer\").Reviewer = function (element, playerObj) {\n        this.rootNode = element;\n        this.player = playerObj;\n\n        this.shaking = false;\n        this.synchronising = false;\n        this.completed = false;\n\n        this.timers = {\n            highGrooveStart: null,\n            lowGrooveStart: null,\n        };\n\n        this.currentFrameId = 0;\n        this.drawnFrameId = null;\n        this.savedFrameIdx = 0;\n        this.trackSlug = element.find(\"[data-song-slug]\").data(\"song-slug\");\n\n        this.currentGroove = 0;\n        this.grooveCurve = [];\n\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], Reviewer, {\n\n        'initialize': function () {\n            Tmt.EventEmitter.prototype.initialize.call(this);\n\n            registerKnob.call(this);\n            registerCanvas.call(this);\n            addEvents.call(this);\n            setGrooveTo.call(this, NEUTRAL_GROOVE_POINT);\n            start.call(this);\n        }\n    });\n\n    function addEvents() {\n        this.player.on(\"play\", onPlay.bind(this));\n        this.player.on(\"stop\", onStop.bind(this));\n        this.player.on(\"completed\", onComplete.bind(this));\n    }\n\n    function setGrooveTo(value) {\n        this.currentGroove = value;\n        this.knob.setValue(value);\n    }\n\n    function start() {\n        this.player.getStreamer().seekTo(95 * this.player.getStreamer().getDuration() / 100, true);\n        this.player.getStreamer().playVideo();\n    }\n\n    function onPlay() {\n        this.knob.enable();\n        tick.call(this);\n        animate.call(this);\n    }\n\n    function onStop() {\n        this.knob.disable();\n    }\n\n    function onComplete() {\n        onStop.call(this);\n        this.completed = true;\n        this.rootNode.addClass(\"review-completed\");\n\n        if (hasUnsynchronisedFrames.call(this)) {\n            saveGrooveCurve.call(this);\n        } else {\n            proposeNextSong.call(this);\n        }\n    }\n\n    function registerKnob() {\n        this.knob = new Tmt.Components.Reviewer.Knob(this.rootNode.find(\".knob-track\"));\n    }\n\n    function registerCanvas() {\n        this.canvas = new Tmt.Components.Reviewer.Canvas(this.rootNode.find(\"canvas\"));\n\n        this.canvas.addEmitter(\"positiveSpark\", this.canvas.node.width / 2, this.canvas.node.height * .15);\n        this.canvas.addEmitter(\"negativeSpark\", this.canvas.node.width / 2, this.canvas.node.height * .85);\n    }\n\n    function tick() {\n        if (this.player.isPlaying()) {\n            setFrameContext.call(this);\n            calculateTimelineContext.call(this);\n            calculateGroove.call(this);\n\n            if (this.currentFrameId % FRAMES_PER_SAVE === 0) {\n                saveGrooveCurve.call(this);\n            }\n\n            logCurrentFrame.call(this);\n\n            setTimeout(tick.bind(this), 1000 / FRAMERATE);\n        }\n    }\n\n    function animate() {\n        if (this.player.isPlaying() && this.drawnFrameId != this.currentFrameId) {\n            this.drawnFrameId = this.currentFrameId;\n            paintFrame.call(this);\n        }\n        requestAnimationFrame(animate.bind(this));\n    }\n\n    function isPositive() {\n        return this.currentGroove > NEUTRAL_GROOVE_POINT;\n    }\n\n    function isNegative() {\n        return this.currentGroove < NEUTRAL_GROOVE_POINT;\n    }\n\n    function setFrameContext() {\n        this.currentFrameId++;\n\n        if (this.currentFrameId > 100000) {\n            this.currentFrameId = 1;\n        }\n    }\n\n    function paintFrame() {\n        if (this.shaking) {\n            this.knob.nudge();\n        } else {\n            this.knob.center();\n        }\n\n        this.canvas.draw();\n    }\n\n    function calculateGroove() {\n        if (this.knob.isWorking()) {\n            this.currentGroove = this.knob.getValue();\n        } else if (isPositive.call(this)) {\n            this.currentGroove -= GROOVE_DECAY;\n        } else if (isNegative.call(this)) {\n            this.currentGroove += GROOVE_DECAY;\n        }\n\n        if (\n            this.currentGroove > (NEUTRAL_GROOVE_POINT - (GROOVE_DECAY * 2)) &&\n            this.currentGroove < (NEUTRAL_GROOVE_POINT + (GROOVE_DECAY * 2))\n        ) {\n            this.currentGroove = NEUTRAL_GROOVE_POINT;\n        }\n\n        this.knob.setValue(this.currentGroove);\n    }\n\n    function calculateTimelineContext() {\n        if (this.knob.isWorking()) {\n            if (this.currentGroove > HIGH_GROOVE_THRESHOLD) {\n                this.timers.lowGrooveStart = null;\n                calculatePositiveContext.call(this);\n                return;\n            } else if (this.currentGroove < LOW_GROOVE_THRESHOLD) {\n                this.timers.highGrooveStart = null;\n                calculateNegativeContext.call(this);\n                return;\n            }\n        }\n\n        this.timers.lowGrooveStart = null;\n        this.timers.highGrooveStart = null;\n        this.shaking = false;\n    }\n\n    // liking it a lot\n    function calculatePositiveContext() {\n        if (!this.timers.highGrooveStart) {\n            this.timers.highGrooveStart = this.currentFrameId;\n            this.shaking = true;\n            this.canvas.emit(\"positiveSpark\", 10);\n\n        } else if (this.timers.highGrooveStart + LENGTH_PER_SHAKE <= this.currentFrameId) {\n            this.timers.highGrooveStart = null;\n            this.currentGroove = HIGH_GROOVE_THRESHOLD;\n            this.knob.stopCurrentDrag();\n            this.shaking = false;\n            this.canvas.emit(\"positiveSpark\", 100);\n        }\n    }\n\n    // hating it a lot\n    function calculateNegativeContext() {\n        if (!this.timers.lowGrooveStart) {\n            this.timers.lowGrooveStart = this.currentFrameId;\n            this.shaking = true;\n            this.canvas.emit(\"negativeSpark\", 10);\n\n        } else if (this.timers.lowGrooveStart + LENGTH_PER_SHAKE <= this.currentFrameId) {\n            this.timers.lowGrooveStart = null;\n            this.currentGroove = LOW_GROOVE_THRESHOLD;\n            this.knob.stopCurrentDrag();\n            this.shaking = false;\n            this.canvas.emit(\"negativeSpark\", 100);\n        }\n    }\n\n    function logCurrentFrame() {\n        if (this.currentFrameId  % 5 === 0) {\n            // Save the current frame only if the value is different than\n            // the previous one. This should save a lot of unecessary DB\n            // entries.\n            var currentFrame = {\n                    groove: this.currentGroove.toFixed(5),\n                    position: this.player.getStreamer().getCurrentTime().toFixed(3)\n                },\n                previousFrame = this.grooveCurve.length > 0 ? this.grooveCurve[this.grooveCurve.length - 1] : null;\n\n            if (!previousFrame || currentFrame.groove != previousFrame.groove) {\n                this.grooveCurve.push(currentFrame);\n            }\n        }\n    }\n\n    function saveGrooveCurve() {\n\n        if (\n            this.grooveCurve.length > 0 && // ... has frames to save\n            hasUnsynchronisedFrames.call(this) && // ... and more values have been added since the last time\n            !this.synchronising // ... but is not currently saving\n        ) {\n\n            // Limit the size of sent packages\n            var packageTotal = this.grooveCurve.length;\n            if (packageTotal > 150) {\n                packageTotal = 150;\n            }\n\n            sendFramesPackage.call(this, this.grooveCurve.slice(this.savedFrameIdx, packageTotal));\n            this.savedFrameIdx = packageTotal - 1;\n        }\n    }\n\n    function sendFramesPackage(span) {\n        this.synchronising = true;\n\n        $.ajax(\"/ajax/\" + this.trackSlug + \"/saveCurvePart/\", {\n            type: \"POST\",\n            cache: false,\n            dataType: \"json\",\n            data: { 'package': span },\n            success: onSyncSuccess.bind(this),\n            error: onSyncFail.bind(this)\n        });\n    }\n\n    function onSyncSuccess() {\n        this.synchronising = false;\n\n        // When the song is completed, loop up to the moment when all\n        // the frames have been saved\n        if (this.completed) {\n            finishUpReviewSave.call(this);\n        }\n    }\n\n    function finishUpReviewSave() {\n        this.rootNode.find('.next-step').addClass(\"review-still-saving\");\n\n        if (hasUnsynchronisedFrames.call(this)) {\n            saveGrooveCurve.call(this);\n        } else {\n            proposeNextSong.call(this);\n        }\n    }\n\n    function hasUnsynchronisedFrames() {\n        return (this.savedFrameIdx + 1) < this.grooveCurve.length;\n    }\n\n    function onSyncFail() {\n        this.synchronising = false;\n    }\n\n    function proposeNextSong() {\n        $.ajax(\"/ajax/\" + this.trackSlug + \"/getNext/\", {\n            type: \"POST\",\n            dataType: \"json\",\n            cache: false,\n            complete: onNextSong.bind(this)\n        });\n    }\n\n    function onNextSong(data) {\n        var nextSong = data.responseJSON;\n        var next = this.rootNode.find('.next-step');\n        next.removeClass(\"review-still-saving\");\n\n        if (nextSong.length > 0) {\n            next.addClass(\"next-track\");\n            next.find(\"i\").replaceWith('<a href=\"/tracks/' + nextSong[0].slug + '/review/\">' + nextSong[0].name + '</a>')\n        } else {\n            next.addClass(\"nothing-else\");\n        }\n    }\n\n\n})(jQuery);\n","(function ($, undefined) {\r\n\r\n    \"use strict\";\r\n\r\n    var Canvas = namespace(\"Tmt.Components.Reviewer\").Canvas = function (element) {\r\n        this.rootNode = element;\r\n        this.node = element.get(0);\r\n        this.context = this.node.getContext('2d');\r\n        this.emitters = {};\r\n\r\n        addEvents.call(this);\r\n    };\r\n\r\n    inherit([], Canvas, {\r\n\r\n        addEmitter : function(id, x, y) {\r\n            var emitter = new Tmt.Components.Reviewer.Emitter.ParticleEmitter();\r\n            emitter.setCanvas(this.node); \r\n            emitter.moveTo(x, y);\r\n\r\n            this.emitters[id] = emitter;\r\n        },\r\n\r\n        emit : function(id, qty) {  \r\n            this.emitters[id].start(qty);\r\n        },\r\n\r\n        draw : function() {\r\n            this.context.clearRect(0, 0, this.node.width, this.node.height);\r\n            for(var i in  this.emitters) {\r\n                if (this.emitters[i].isRunning()) {\r\n                    this.emitters[i].run();\r\n                    this.emitters[i].render();\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    function addEvents () {\r\n        $(window).on('resize', debounce(applyCurrentSize.bind(this)));\r\n        applyCurrentSize.call(this);\r\n    }\r\n\r\n    function applyCurrentSize () {\r\n        this.node.height = this.rootNode.parent().height();\r\n        this.node.width = this.rootNode.parent().width();\r\n    }\r\n\r\n\r\n})(jQuery);\r\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var Vector = namespace(\"Tmt.Components.Reviewer.Emitter\").Vector = function (x, y) {\n        this.y = y;\n        this.x = x;\n    };\n\n    inherit([], Vector, {\n\n        add : function (vector) {\n            this.x = this.x + vector.x;\n            this.y = this.y + vector.y;\n        }\n\n    });\n\n})(jQuery);\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var Vector = Tmt.Components.Reviewer.Emitter.Vector;\n\n    var Particle = namespace(\"Tmt.Components.Reviewer.Emitter\").Particle = function (canvas, x, y) {\n        this.size = Math.random() * 10 + 15;\n\n        this.position = new Vector(x, y);\n        var velocityX = (Math.random() * 5) * (Math.random() >= 0.5 ? 1 : -1);\n        var velocityY = Math.random() * 5;\n\n        this.velocity = new Vector(velocityX, velocityY);\n        this.acceleration = new Vector(0, 0.1);\n        this.lifespan = Math.random() * 350;\n\n        this.image = new Image();\n        this.image.src = '/assets/img/spark.png';\n        this.context = canvas.getContext('2d');\n\n        this.image.onload = function () {\n            this.context.drawImage(this.image, this.position.x, this.position.y);\n        }.bind(this);\n    };\n\n    inherit([], Particle, {\n\n        update: function () {\n            this.velocity.add(this.acceleration);\n            this.position.add(this.velocity);\n            this.lifespan -= 1;\n        },\n\n        isDead: function () {\n            return this.lifespan < 0;\n        },\n\n        paint: function () {\n            this.context.save();\n\n            if (this.lifespan < 100) {\n                this.context.globalAlpha = this.lifespan / 100;\n            }\n\n            this.context.drawImage(this.image, this.position.x, this.position.y);\n            this.context.restore();\n        }\n\n    });\n\n\n})(jQuery);\n","(function ($, undefined) {\r\n\r\n    \"use strict\";\r\n\r\n    var Particle = Tmt.Components.Reviewer.Emitter.Particle,\r\n        Vector = Tmt.Components.Reviewer.Emitter.Vector;\r\n\r\n    var ParticleEmitter = namespace(\"Tmt.Components.Reviewer.Emitter\").ParticleEmitter = function () {\r\n        this.particles = [];\r\n        this.position = new Vector(0, 0);\r\n    };\r\n\r\n    inherit([], ParticleEmitter, {\r\n\r\n        isRunning: function () {\r\n            return this.particles.length > 0;\r\n        },\r\n\r\n        setCanvas: function (canvas) {\r\n            this.canvas = canvas;\r\n        },\r\n\r\n        moveTo: function (x, y) {\r\n            this.position = new Vector(x, y);\r\n        },\r\n\r\n        start: function (quantity) {\r\n            for (var i = 0; i < quantity; i++) {\r\n                this.particles.push(new Particle(this.canvas, this.position.x, this.position.y));\r\n            }\r\n        },\r\n\r\n        run: function () {\r\n            for (var i = this.particles.length - 1; i >= 0; i--) {\r\n                this.particles[i].update();\r\n                if (this.particles[i].isDead()) {\r\n                    this.particles.pop();\r\n                }\r\n            }\r\n        },\r\n\r\n        render: function () {\r\n            for (var i = this.particles.length - 1; i >= 0; i--) {\r\n                this.particles[i].paint();\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n\r\n})(jQuery);\r\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var forms = [];\n\n    /**\n     * Ajax-enabled forms public bootstraper\n     */\n    var AjaxFormsInitializer = namespace(\"Tmt.Initializers\").AjaxFormsInitializer = function () {\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], AjaxFormsInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        },\n\n        'getForms': function() {\n            return forms;\n        }\n    });\n\n    function bindPageForms() {\n        forms = [];\n        $(\"form[data-ctrl-mode=ajax]\").each(function () {\n            forms.push(new Tmt.Components.AjaxForm($(this)));\n        });\n\n        this.emit('bound', this, forms);\n    }\n\n    function addEvents(app) {\n        app.on('ready', bindPageForms.bind(this));\n    }\n\n})(jQuery);\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var PlayerInitializer = namespace(\"Tmt.Initializers\").PlayerInitializer = function () {\n        this.initialize();\n        this.players = [];\n    };\n\n    inherit([Tmt.EventEmitter], PlayerInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        }\n    });\n\n    function addEvents(app) {\n        $(onDomReady.bind(this));\n    }\n\n    function onDomReady() {\n        var components = $(\"*[data-song-vid]\");\n        if (components.length > 0) {\n            for (var i = 0; i < components.length; i++) {\n                this.players.push(new Tmt.Components.Player($(components.get(i))));\n            }\n            includeYoutubeScript.call(this);\n        }\n        this.emit('bound', this);\n    }\n\n    function onYouTubeReady() {\n        for (var i = 0; i < this.players.length; i++) {\n            this.players[i].render();\n        }\n    }\n\n    function includeYoutubeScript() {\n        var tag = document.createElement('script');\n        tag.src = \"//www.youtube.com/player_api\";\n\n        window.onYouTubeIframeAPIReady = onYouTubeReady.bind(this);\n\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n})(jQuery);\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var reviewerWindow;\n\n    var ReviewerInitializer = namespace(\"Tmt.Initializers\").ReviewerInitializer = function () {\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], ReviewerInitializer, {\n        'build': function (app) {\n            reviewerWindow = $('[data-attr=\"tmt-reviewer\"]');\n            if (reviewerWindow.length > 0) {\n                app.initializers.PlayerInitializer.on('bound', bindToPlayer.bind(this));\n            }\n        }\n    });\n\n    function bindToPlayer(playerInitializer) {\n        if (playerInitializer.players.length === 1) {\n            playerInitializer.players[0].on('embeded', function(player) {\n                player.getStreamer().addEventListener('onReady', function() {\n                    new Tmt.Components.Reviewer.Reviewer(reviewerWindow, player);\n                });\n            });\n        }\n    }\n\n})(jQuery);\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var ProfileInitializer = namespace(\"Tmt.Initializers\").ProfileInitializer = function () {\n        this.notificationTimestamp = 0;\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], ProfileInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        }\n    });\n\n    function addEvents(app) {\n        app.on('ready', bindProfileHooks.bind(this));\n        app.initializers.UpvoteFormsInitializer.on('bound', function(upvoteFormsInitializer){\n            bindToUpvoteForms(app, upvoteFormsInitializer);\n        }.bind(this));\n    }\n\n    function bindProfileHooks(app) {\n        app.on(\"profileFirstPopulated\", bindToProfile.bind(this));\n    }\n\n    function bindToUpvoteForms(app, UpvoteFormsInitializer) {\n        var fn = function(value, upvoteForm) {\n            onUpvoteValue(app.profile, value, upvoteForm);\n        }.bind(this);\n\n        var i = 0,\n            forms = UpvoteFormsInitializer.getForms(),\n            len = forms.length;\n\n        for ( ; i < len; i++) {\n            forms[i].on(\"valueChange\", fn);\n        }\n    }\n\n    function bindToProfile(app, profile) {\n        if (profile.id > 0) {\n            bindNotifier.call(this, app, profile);\n            pingNotifications.call(this, profile);\n        }\n    }\n\n    function bindNotifier(app, profile) {\n        var notifier = new Tmt.Components.Notifier($('[data-ctrl=notifier]'), profile);\n        notifier.on('notificationRead', clearNotifications.bind(this));\n    }\n\n    function pingNotifications(profile) {\n        $.ajax({\n            dataType : \"html\",\n            url : \"/ajax/whatsUp/\",\n            contentType:\"application/json; charset=utf-8\",\n            data : { timestamp: this.notificationTimestamp},\n            success : function(data) {\n                data = JSON.parse(data);\n                for(var i = 0, len = data.length; i < len; i++) {\n                    profile.addNotification(data[i]);\n                }\n                setTimeout(pingNotifications.bind(this), 1000 * 60 * 2);\n            }.bind(this)\n        });\n\n        this.notificationTimestamp = parseInt(Date.now() / 1000, 10);\n    }\n\n    function clearNotifications(notificationsIds, destinationUrl) {\n         $.ajax({\n            dataType : \"html\",\n            url : \"/ajax/okstfu/\",\n            contentType:\"application/json; charset=utf-8\",\n            data : { ids: notificationsIds},\n            success : function(data) {\n                if (destinationUrl) {\n                    window.location = destinationUrl;\n                }\n            }\n        });\n    }\n\n    function onUpvoteValue(profile, value, upvoteForm) {\n        var type = upvoteForm.isTrack() ? \"tracks\" : \"albums\";\n        if (value > 0) {\n            profile.addUpvote(type, upvoteForm.getObjectId(), value);\n        } else {\n            profile.removeUpvote(type, upvoteForm.getObjectId());\n        }\n    }\n\n})(jQuery);\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    /**\n     * Ajax-enabled forms public bootstraper\n     */\n    var SearchInitializer = namespace(\"Tmt.Initializers\").SearchInitializer = function () {\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], SearchInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        }\n    });\n\n    function bindForm() {\n        new Tmt.Components.SearchForm();\n    }\n\n    function addEvents(app) {\n        app.on('ready', bindForm.bind(this));\n    }\n\n})(jQuery);\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var boxes = [];\n\n    /**\n     * Ajax-enabled forms public bootstraper\n     */\n    var UpvoteFormsInitializer = namespace(\"Tmt.Initializers\").UpvoteFormsInitializer = function () {\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], UpvoteFormsInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        },\n        'getForms': function () {\n            return boxes;\n        }\n    });\n\n    function addEvents(app) {\n        app.initializers.AjaxFormsInitializer.on('bound', bindToAjaxForms.bind(this));\n        app.on('profileFirstPopulated', updateStateFirstTime.bind(this));\n    }\n\n    function bindToAjaxForms(ajaxFormsInitializer, forms) {\n        filter('[data-ctrl=\"upvote-widget\"]', forms).forEach(function(form){\n            boxes.push(new Tmt.Components.UpvoteForm(form));\n        });\n        this.emit('bound', this);\n    }\n\n    function updateStateFirstTime(app, profile) {\n        boxes.forEach(function (box) {\n            var matchFound = profile.getVoteByObjectId(box.getType(), box.getObjectId());\n\n            if (matchFound) {\n                box.setValue(matchFound);\n            }\n\n            // Though we have no value to apply on the control,\n            // it is still time to activate it.\n            box.unlock();\n        });\n\n        this.emit(\"synched\", this);\n    }\n\n})(jQuery);\n"]}