{"version":3,"sources":["globals.js","event-emitter.js","app.js","profile.js","ajax-form.js","player.js","upvote-form.js","search-form.js","notifier.js","ajax-forms-initializer.js","player-initializer.js","profile-initializer.js","search-initializer.js","upvote-forms-initializer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChhrxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpfile":"app.js","sourcesContent":["\"use strict\";\n\n/**\n * Globally exposed namespacing function.\n * @public\n * @param {string} namespace\n * @return {object} A referene to the object created\n */\nfunction namespace(namespace) {\n    var object = window, tokens = namespace.split(\".\"), token;\n\n    while (tokens.length > 0) {\n        token = tokens.shift();\n\n        if (typeof object[token] === \"undefined\") {\n            object[token] = {};\n        }\n\n        object = object[token];\n    }\n\n    return object;\n}\n\n/**\n * Globally exposed extending function.\n * @param {object} target\n * @param {hash} source\n * @return {object}\n */\nfunction extend(target, source) {\n    target = target || {};\n    for (var prop in source) {\n        if (typeof source[prop] === 'object') {\n            target[prop] = extend(target[prop], source[prop]);\n        } else {\n            target[prop] = source[prop];\n        }\n    }\n    return target;\n}\n\n/**\n * Sets up inheritance of the child object to the objects\n * supplied by the parents object.\n * @param {array} parents\n * @param {object} child\n * @param {hash} properties\n * @return {object} An object with inheritance\n */\nfunction inherit(parents, child, properties) {\n    var childPrototype = properties;\n\n    for (var i in parents) {\n        var parentPrototype = Object.create(parents[i].prototype);\n        childPrototype = extend(parentPrototype, childPrototype);\n    }\n\n    child.prototype = childPrototype;\n    child.prototype.constructor = child;\n\n    return child;\n}\n\n/**\n * Globally filters out jQuery elements matching selector\n * from the haystack. This expects javascript objects that\n * have a public \"element\" property.\n * @param {string} selector\n * @param {array} haystack\n * @return {array} matches\n */\nfunction filter(selector, haystack) {\n    var matches = [],\n        i = -1;\n\n    while (++i < haystack.length) {\n        if (haystack[i].element && haystack[i].element.is(selector)) {\n            matches.push(haystack[i]);\n        }\n    }\n\n    return matches;\n}\n","(function (undefined) {\n\n    \"use strict\";\n\n    /**\n     * @namespace Tmt.EventEmitter\n     * @property {array} events A collection of object events and callbacks.\n     */\n    var EventEmitter = namespace(\"Tmt\").EventEmitter = function() {\n        this.events = null;\n    };\n\n    inherit([Evemit], namespace(\"Tmt\").EventEmitter, {\n\n        /**\n         * Initializes the event emitter object.\n         * @method\n         * @public\n         */\n        'initialize': function () {\n            // Exposing the creation in a prototype method\n            // ensures child classes will have an instantiated value\n            // even if they don't go through the constructor.\n            this.events = {};\n        }\n    });\n\n}());\n","(function (undefined) {\r\n\r\n    \"use strict\";\r\n\r\n    /**\r\n     * The global wrapper for the application instance.\r\n     * @namespace Tmt.App\r\n     * @extends {Tmt.EventEmitter}\r\n     * @property {Tmt.Models.Profile} profile - An active session profile\r\n     * @property {Array} initializers - An array of Tmt.Initializers object.\r\n     */\r\n    var App = namespace(\"Tmt\").App = function () {\r\n        this.profile = null;\r\n        this.initializers = [];\r\n\r\n        this.initialize();\r\n    };\r\n\r\n    inherit([Tmt.EventEmitter], App, {\r\n\r\n        /**\r\n         * Boots the application instance\r\n         * @public\r\n         * @method\r\n         */\r\n        boot: function () {\r\n            this.profile = new Tmt.Models.Profile();\r\n            prepareInitializers.call(this);\r\n            this.emit(\"ready\", this);\r\n        },\r\n\r\n        /**\r\n         * Assigns session data from PHP to this javascript\r\n         * session instance.\r\n         * @method\r\n         * @public\r\n         */\r\n        setData: function (data) {\r\n            if (data.profile) {\r\n                this.profile.setData(data.profile);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Loads all initializer objects that it can dynamically find\r\n     * in the Tmt.Initializers namespace and then builds them.\r\n     * @method\r\n     * @private\r\n     */\r\n    function prepareInitializers() {\r\n        // Create an intance of each initializer.\r\n        for (var type in Tmt.Initializers) {\r\n            this.initializers[type] = new Tmt.Initializers[type]();\r\n        }\r\n\r\n        // Run the initialization. This is done in two steps because\r\n        // initializers may depend on one another.\r\n        for (var type in this.initializers) {\r\n            this.initializers[type].build(this);\r\n        }\r\n    }\r\n\r\n}());\r\n","(function (undefined) {\r\n\r\n    \"use strict\";\r\n\r\n    /**\r\n     * The Profile object is the frontend equivalent of the\r\n     * backend Profile model.\r\n     * @namespace Tmt.Models.Profile\r\n     * @property {array} albumUpvotes\r\n     * @property {array} trackUpvotes\r\n     * @property {array} activities\r\n     */\r\n    var Profile = namespace(\"Tmt.Models\").Profile = function () {\r\n        this.notifications = [];\r\n        this.initialize();\r\n    };\r\n\r\n    inherit([Tmt.EventEmitter], Profile, {\r\n\r\n        /**\r\n         * Applies backend session data to the object.\r\n         * @param {hash} userData\r\n         * @public\r\n         * @method\r\n         * @fires Profile#upvoteSet\r\n         */\r\n        setData: function (userData) {\r\n            this.username = userData.username;\r\n            this.email = userData.email;\r\n            this.slug = userData.slug;\r\n            this.name = userData.name;\r\n            this.id = userData.id;\r\n            this.emit(\"dataSet\", this);\r\n\r\n            this.albumUpvotes = indexUpvotes(\"albumUpvotes\", userData);\r\n            this.trackUpvotes = indexUpvotes(\"trackUpvotes\", userData);\r\n\r\n            if (this.albumUpvotes && this.albumUpvotes.length > 0) {\r\n                this.emit(\"upvoteSet\", \"album\", this.albumUpvotes);\r\n            }\r\n\r\n            if (this.trackUpvotes && this.trackUpvotes.length > 0) {\r\n                this.emit(\"upvoteSet\", \"track\", this.trackUpvotes);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Adds a new vote value to the current profile\r\n         * @param {string} type One of track or album\r\n         * @param {string} key The {type}'s id\r\n         * @param {string} value\r\n         * @fires Profile#upvoteUpdate\r\n         * @public\r\n         * @method\r\n         */\r\n        addUpvote: function (type, key, value) {\r\n            if (type == \"album\") {\r\n                return this.addAlbumUpvote(key, value);\r\n            } else if (type == \"track\") {\r\n                return this.addTrackUpvote(key, value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add a new album vote\r\n         * @param {string} key album id\r\n         * @param {string} value\r\n         * @fires Profile#upvoteUpdate\r\n         * @public\r\n         * @method\r\n         */\r\n        addAlbumUpvote: function (key, value) {\r\n            this.albumUpvotes[key] = value;\r\n            this.emit(\"upvoteUpdate\", \"album\", this.albumUpvotes);\r\n        },\r\n\r\n        /**\r\n         * Add a new track vote\r\n         * @param {string} key track id\r\n         * @param {string} value\r\n         * @fires Profile#upvoteUpdate\r\n         * @public\r\n         * @method\r\n         */\r\n        addTrackUpvote: function (key, value) {\r\n            this.trackUpvotes[key] = value;\r\n            this.emit(\"upvoteUpdate\", \"track\", this.trackUpvotes);\r\n        },\r\n\r\n        /**\r\n         * Removes an existing vote value to the current profile\r\n         * @param {string} type One of track or album\r\n         * @param {string} key The {type}'s id\r\n         * @fires Profile#upvoteUpdate\r\n         * @public\r\n         * @method\r\n         */\r\n        removeUpvote: function (type, key) {\r\n            if (type == \"album\") {\r\n                return this.removeAlbumUpvote(key, value);\r\n            } else if (type == \"track\") {\r\n                return this.removeTrackUpvote(key, value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Removes an existing album vote\r\n         * @param {string} key album id\r\n         * @param {string} value\r\n         * @fires Profile#upvoteUpdate\r\n         * @public\r\n         * @method\r\n         */\r\n        removeAlbumUpvote: function (type, key) {\r\n            delete this.albumUpvotes[key];\r\n            this.emit(\"upvoteUpdate\", \"album\", this.upvotes);\r\n        },\r\n\r\n        /**\r\n         * Removes an existing track vote\r\n         * @param {string} key track id\r\n         * @param {string} value\r\n         * @fires Profile#upvoteUpdate\r\n         * @public\r\n         * @method\r\n         */\r\n        removeTrackUpvote: function (type, key) {\r\n            delete this.trackUpvotes[key];\r\n            this.emit(\"upvoteUpdate\", \"track\", this.upvotes);\r\n        },\r\n\r\n        /**\r\n         * Adds a user activity notification (viewed or not)\r\n         * @param {hash} notification\r\n         * @fires Profile#notification\r\n         * @public\r\n         * @method \r\n         */\r\n        addNotification : function (notification) {\r\n            this.notifications.push(notification);\r\n\r\n            if (this.notifications.length > 10) {\r\n                this.notifications.length = 10;\r\n            }\r\n\r\n            this.emit(\"notification\", notification);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Data saved in the database is not easily serachable\r\n     * in javascript. This method bridges the two.\r\n     * @param {string} key one of track or album\r\n     * @param {hash} data values as stored in the BD\r\n     * @return {hash} A javascript-oriented indexed object\r\n     * @private\r\n     * @method\r\n     */\r\n    function indexUpvotes(key, data) {\r\n        var indexed = [];\r\n        if (data && data[key]) {\r\n            for (var i in data[key]) {\r\n                var id = data[key][i].id,\r\n                    value = data[key][i].vote;\r\n\r\n                indexed[id] = value;\r\n            }\r\n        }\r\n        return indexed;\r\n    }\r\n\r\n}());\r\n","(function() {\n\n    \"use strict\";\n\n    /**\n     * A form object that can be captured using ajax.\n     * @param {jQuery} el\n     */\n    var AjaxForm = namespace(\"Tmt.Components\").AjaxForm = function(el) {\n        this.element = el;\n        this.initialize();\n    };\n\n    inherit([ Tmt.EventEmitter ], AjaxForm, {\n        render : function() {\n            this.addEvents();\n        },\n\n        addEvents : function() {\n            this.element.on(\"submit\", onSubmit.bind(this));\n            this.element.on(\"onBeforeSubmit\", onBeforeSubmit.bind(this));\n            this.emit(\"bound\", this);\n        }\n    });\n\n\n    function onSubmit(event) {\n        event.preventDefault();\n\n        this.emit(\"beforeSubmit\", this, event);\n\n        var formElement = this.element;\n\n        $.ajax({\n            url: formElement.attr(\"action\"),\n            data: new FormData(formElement.get(0)),\n            cache: false,\n            processData: false,\n            contentType: false,\n            type: formElement.attr('method'),\n            success: onSubmitSuccess.bind(this)\n        });\n\n        this.emit(\"submit\", this);\n    };\n\n    function onBeforeSubmit()\n    {\n        this.element.addClass(\"working\");\n    }\n\n    function onSubmitSuccess(response) {\n        /*\n        var newVersion = $(html);\n\n        this.element.replaceWith(newVersion);\n        this.element = newVersion;\n        this.addEvents();*/\n\n        this.emit(\"submitSuccess\", response, this);\n        // this.emit(\"afterRender\", this);\n    }\n\n}());\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var Player = namespace(\"Tmt.Components\").Player = function (element) {\n        this.element = element;\n        this.embed = null;\n        this.ytPlayer = null;\n        this.isPlaying = false;\n        this.range = null;\n\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], Player, {\n\n        'render': function () {\n            this.hasVideoId() ?\n                embedVideo.call(this) :\n                queryForKey.call(this);\n        },\n\n        'getEmbedId': function () {\n            if (this.hasVideoId) {\n                return \"tmt_player_\" + this.getVideoId();\n            }\n        },\n\n        'getVideoId': function () {\n            return this.element.data(\"song-vid\");\n        },\n\n        'setVideoId': function (id) {\n            this.element.data(\"song-vid\", id);\n        },\n\n        'hasVideoId': function () {\n            return this.getVideoId() != \"\";\n        },\n\n        'getSongSlug': function () {\n            return this.element.data(\"song-slug\");\n        }\n    });\n\n    function queryForKey() {\n        $.getJSON('/ajax/ytkey/' + this.getSongSlug(), onYtKeyReceived.bind(this));\n    }\n\n    function onYtKeyReceived(response) {\n        if (response.youtubekey.length === 11) {\n            this.setVideoId(response.youtubekey);\n            embedVideo.call(this);\n        }\n    }\n\n    function embedVideo() {\n        var id = this.getEmbedId();\n        var iframeHtml =\n            '<iframe id=\"' + id + '\" scrolling=\"no\" marginwidth=\"0\" ' +\n            'marginheight=\"0\" frameborder=\"0\" src=\"//www.youtube.com/embed/' +\n            this.getVideoId() + '?enablejsapi=1&amp;iv_load_policy=3&amp;' +\n            'playerapiid=songplayer_component_17&amp;disablekb=1&amp;wmode=transparent&amp;controls=0' +\n            '&amp;playsinline=0&amp;showinfo=0&amp;modestbranding=1&amp;rel=0&amp;' +\n            'autoplay=0&amp;loop=0&amp;origin=' + window.location.origin + '\"></iframe>'\n\n        this.element.append(iframeHtml);\n        this.embed = $(\"#\" + id);\n\n        this.ytPlayer = new YT.Player(id);\n\n        this.ytPlayer.addEventListener('onReady', onPlayerReady.bind(this));\n        this.ytPlayer.addEventListener('onStateChange', onPlayerStateChange.bind(this));\n    }\n\n    function onPlayerStateChange(newState) {\n        /*\n        -1 (unstarted)\n        0 (ended)\n        1 (playing)\n        2 (paused)\n        3 (buffering)\n        5 (video queued) */\n        var controlButton = this.element.find('.play');\n\n        if (newState.data === 1) {\n            controlButton.removeClass(\"fa-play\");\n            controlButton.addClass(\"fa-pause\");\n\n            this.isPlaying = true;\n            onPlayerTick.call(this);\n        }\n        else if (newState.data === 2) {\n            controlButton.removeClass(\"fa-pause\");\n            controlButton.addClass(\"fa-play\");\n\n            this.isPlaying = false;\n        }\n    }\n\n    function onProgressClick(e) {\n        if (this.isPlaying) {\n            var progressBar = this.element.find(\".progress-wrap .progress\"),\n                offset = progressBar.offset(),\n                relX = e.pageX - offset.left,\n                pctLocation = relX / progressBar.width();\n            this.ytPlayer.seekTo(pctLocation * this.ytPlayer.getDuration(), true);\n        }\n    };\n\n    function onPlayBtnClick(e) {\n        // Ranges wil be back shortly\n        this.playingRange = null;\n\n        (this.ytPlayer.getPlayerState() != 1) ?\n            this.ytPlayer.playVideo() :\n            this.ytPlayer.pauseVideo();\n    }\n\n\n    function onPlayerReady(event) {\n        this.element.find(\".duration\").html(toReadableTime(this.ytPlayer.getDuration()));\n        this.element.find(\".position\").html(toReadableTime(0));\n        this.element.find(\".progress-wrap .progress\").click(onProgressClick.bind(this));\n\n        var playBtn = this.element.find('.play');\n        playBtn.removeClass(\"fa-stop\");\n        playBtn.addClass(\"fa-play\");\n        playBtn.click(onPlayBtnClick.bind(this));\n\n        // Ranges wil be back shortly\n        // $(\"*[data-from]\").click(function () {\n        //     var el = $(this);\n        //     tmt.playingRange = [parseInt(el.attr(\"data-from\"), 10), parseInt(el.attr(\"data-to\"), 10)];\n        //     (player.getPlayerState() != 1) ? player.playVideo() : player.pauseVideo();\n        //     player.seekTo(tmt.playingRange[0], true);\n        // });\n    };\n\n    function onPlayerTick() {\n        var currentTime = this.ytPlayer.getCurrentTime(),\n            durationTime = this.ytPlayer.getDuration(),\n            currentPositionPct = (currentTime / durationTime) * 100;\n\n        this.element.find('.position').html(toReadableTime(currentTime));\n\n        this.element.find('.cursor').css(\"left\", currentPositionPct + \"%\");\n        this.element.find('.progress .loaded-bar').css(\"width\", (this.ytPlayer.getVideoLoadedFraction() * 100) + \"%\");\n        this.element.find('.progress .playing-bar').css(\"width\", currentPositionPct + \"%\");\n        this.element.find('.progress .playing-bar').attr(\"aria-valuenow\", currentTime);\n\n        if (this.isPlaying) {\n            // if (tmt.playingRange) {\n\n            //     if (currentTime >= tmt.playingRange[1]) {\n            //         tmt.playingRange = null;\n            //         player.pauseVideo();\n            //     }\n            //     else if (currentTime <= tmt.playingRange[0]) {\n            //         player.seekTo(tmt.playingRange[0], true);\n            //     }\n            // }\n            setTimeout(onPlayerTick.bind(this), 250);\n        }\n    }\n\n    function toReadableTime(seconds) {\n        var time = new Date(1000 * seconds),\n            mins = (\"0\" + time.getMinutes()).slice(-2),\n            secs = (\"0\" + time.getSeconds()).slice(-2);\n\n        return mins + \":\" + secs;\n    }\n\n})(jQuery);\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var UpvoteForm = namespace(\"Tmt.Components\").UpvoteForm = function (ajaxForm) {\n        this.ajaxForm = ajaxForm;\n        this.element = ajaxForm.element;\n\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], UpvoteForm, {\n\n        \"initialize\": function () {\n            Tmt.EventEmitter.prototype.initialize.call(this);\n\n            this.addEvents();\n            resetButtons.call(this);\n            this.element.addClass(\"initialized\");\n        },\n\n        \"addEvents\": function () {\n            this.element.find(\"button\").click(onButtonClick.bind(this));\n            this.ajaxForm.on('submitSuccess', onSubmitSuccess.bind(this));\n        },\n\n        \"getType\": function () {\n            return this.element.data(\"upvote-type\");\n        },\n\n        \"getObjectId\": function () {\n            return this.element.data(\"upvote-object-id\");\n        },\n\n        \"isTrack\": function () {\n            return this.getType() == \"track\";\n        },\n\n        \"isAlbum\": function () {\n            return this.getType() == \"album\";\n        },\n\n        \"setValue\": function (value) {\n            this.element.removeClass(\"liked disliked\");\n            this.element.find(\"input[name=vote]\").val(value);\n\n            if (value == 1) {\n                this.element.addClass(\"liked\");\n                enableButton(this.element.find('button.up'));\n            } else if (value == 2) {\n                this.element.addClass(\"disliked\");\n                this.element.find('button.down').html('<i class=\"fa fa-thumbs-down\" aria-hidden=\"true\">');\n            } else {\n                resetButtons.call(this);\n            }\n\n            this.emit('valueChange', value, this);\n        },\n\n        \"getValue\": function () {\n            return this.element.find(\"input[name=vote]\").val();\n        },\n\n        \"lock\": function () {\n            this.element.find(\"button\").attr(\"disabled\", \"disabled\");\n        },\n\n        \"unlock\": function () {\n            this.element.find(\"button\").removeAttr(\"disabled\");\n        }\n    });\n\n    function resetButtons() {\n        this.element.find('button.up').html('<i class=\"fa fa-thumbs-o-up\" aria-hidden=\"true\">');\n        this.element.find('button.down').html('<i class=\"fa fa-thumbs-o-down\" aria-hidden=\"true\">');\n    }\n\n    function enableButton(button) {\n        if (button.hasClass(\"up\")) {\n            button.html('<i class=\"fa fa-thumbs-up\" aria-hidden=\"true\">');\n        }\n        if (button.hasClass(\"down\")) {\n            button.html('<i class=\"fa fa-thumbs-down\" aria-hidden=\"true\">');\n        }\n    }\n\n    function onButtonClick(evt) {\n        var clickedValue = evt.target.value;\n\n        if (clickedValue != this.getValue()) {\n            this.setValue(clickedValue);\n        } else {\n            // twice the same value means the user wants to cancel\n            this.setValue(-1);\n        }\n\n        this.lock();\n        this.element.submit();\n    }\n\n    function onSubmitSuccess(response, ajaxForm) {\n        if (response && response.vote) {\n            this.setValue(response.vote);\n        }\n\n        this.unlock();\n    }\n\n})(jQuery);\n","\n(function ($, undefined) {\n\n    \"use strict\";\n\n    var SearchForm = namespace(\"Tmt.Components\").SearchForm = function () {\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], SearchForm, {\n\n        \"initialize\": function () {\n            Tmt.EventEmitter.prototype.initialize.call(this);\n\n            // search box\n            var artistsSearch = new Bloodhound({\n                name: 'artists',\n                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('artist'),\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\n                remote: {\n                    url: '/ajax/artistSearch/?q=%QUERY',\n                    wildcard: '%QUERY'\n                }\n            }),\n                albumsSearch = new Bloodhound({\n                    name: 'albums',\n                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('album'),\n                    queryTokenizer: Bloodhound.tokenizers.whitespace,\n                    remote: {\n                        url: '/ajax/albumSearch/?q=%QUERY',\n                        wildcard: '%QUERY'\n                    }\n                }),\n                tracksSearch = new Bloodhound({\n                    name: 'tracks',\n                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('track'),\n                    queryTokenizer: Bloodhound.tokenizers.whitespace,\n                    remote: {\n                        url: '/ajax/trackSearch/?q=%QUERY',\n                        wildcard: '%QUERY'\n                    }\n                }),\n                searchBox = $('.typeahead');\n\n\n            // Listens for when Typeahead a selected a value.\n            function typeahead_onSelected(e, data, section) {\n                e.preventDefault();\n                document.location = $('.tt-cursor a:nth-child(1)').attr('href');\n            }\n\n            artistsSearch.initialize();\n            albumsSearch.initialize();\n            tracksSearch.initialize();\n\n            searchBox.on(\"typeahead:selected\", typeahead_onSelected);\n\n            searchBox.typeahead(\n                { minLength: 3, highlight: true, cache: true },\n                [\n                    {\n                        name: 'artists',\n                        display: 'artist',\n                        source: artistsSearch,\n                        cache: true,\n                        templates: {\n                            header: '<h3>Artists</h3>',\n                            empty: '<h3>Artists</h3><p class=\"empty-message\">Could not find matching artists.</p>',\n                            suggestion: function (data) { return ['<p><a href=\"/artists/' + data.slug + '/\">' + data.name + '</a></p>'].join(\"\"); }\n                        }\n                    },\n                    {\n                        name: 'albums',\n                        display: 'album',\n                        source: albumsSearch,\n                        cache: true,\n                        templates: {\n                            header: '<h3>Albums</h3>',\n                            empty: '<h3>Albums</h3><p class=\"empty-message\">Could not find matching albums.</p>',\n                            suggestion: function (data) { return ['<p><a href=\"/albums/' + data.slug + '/\">' + data.name + '</a> by <a href=\"/artists/' + data.slug + '/\">' + data.name + '</a></p>'].join(\"\"); }\n                        }\n                    },\n                    {\n                        name: 'tracks',\n                        display: 'track',\n                        source: tracksSearch,\n                        cache: true,\n                        templates: {\n                            header: '<h3>Tracks</h3>',\n                            empty: '<h3>Tracks</h3><p class=\"empty-message\">Could not find matching tracks.</p>',\n                            suggestion: function (data) { return ['<p><a href=\"/albums/' + data.slug + '/\">' + data.name + '</a> by <a href=\"/artists/' + data.slug + '/\">' + data.name + '</a></p>'].join(\"\"); }\n                        }\n                    }\n                ]\n            );\n\n        }\n    });\n\n\n})(jQuery);\n","(function() {\n\n    \"use strict\";\n\n    /**\n     * A user notifier control.\n     * @param {jQuery} el\n     */\n    var Notifier = namespace(\"Tmt.Components\").Notifier = function(el, profile) {\n        this.initialize();\n\n        this.element = el;\n        this.notifications = [];\n\n        profile.on(\"notification\", onNewNotification.bind(this));\n\n        this.addEvents();\n        this.render();\n    };\n\n    inherit([ Tmt.EventEmitter ], Notifier, {\n\n        addEvents : function() {\n            this.element.find('ul').click(onListClick.bind(this));\n            this.element.find('button').click(onClearClick.bind(this));\n        },\n\n        render : function() {\n\n            this.hasNotifications() ?\n                this.element.find('li.no-notices').hide() :\n                this.element.find('li.no-notices').show();\n\n\n            var alertCount = this.getAlertCount(),\n                notice = this.element.find('em');\n\n            notice.html(alertCount);\n            alertCount > 0 ?\n                notice.show() :\n                notice.hide();\n        },\n\n        hasNotifications : function() {\n            return this.notifications.length > 0;\n        },\n\n        getAlertCount : function() {\n            var alertCount = 0;\n            for(var i = 0; i < this.notifications.length; i++) {\n                if (this.notifications[i]['must_notify'] > 0) {\n                    alertCount++;\n                }\n            }\n            return alertCount;\n        }\n    });\n\n    function onListClick(evt) {\n        if (evt.target.tagName.toLowerCase() == \"a\") {\n            evt.preventDefault();\n            var target = $(evt.target);\n            this.emit('notificationRead', [target.data(\"id\")], target.href);\n\n            for(var i = 0; i < this.notifications.length; i++) {\n                if (this.notifications[i]['id'] == target.data(\"id\")) {\n                    this.notifications[i]['must_notify'] = 0;\n                    target.parent().removeClass(\"new\");\n                    target.parent().addClass(\"old\");\n                    break;\n                }\n            }\n\n            this.render();\n        }\n    }\n\n    function onClearClick(evt) {\n        var ids = collectNewActivityIds.call(this);\n        if (ids.length > 0) {\n            for(var i = 0; i < this.notifications.length; i++) {\n                this.notifications[i]['must_notify'] = 0;\n            }\n            this.element.find('li').removeClass(\"new\");\n            this.element.find('li').addClass(\"old\");\n            this.render();\n\n            this.emit('notificationRead', ids);\n        }\n    }\n\n    function onNewNotification(notification) {\n\n        var label = notification['association_summary'] ? notification['association_summary'] : \"Notification\";\n\n        if (notification['associated_object_type'] === \"profile\") {\n            label = '<a data-id=\"'+ notification['id'] +'\" href=\"/tankers/'+ notification['associated_object']['slug'] +'\">' + notification['associated_object']['name'] + ' is now following you.</a>';\n        }\n\n        this.element.find('ul').append('<li class=\"' + (notification['must_notify'] > 0 ? 'new' : 'old') + '\">' + label + '</li>');\n\n        this.notifications.push(notification);\n        if (this.notifications > 5) {\n            this.notifications = 5;\n        }\n\n        this.render();\n    }\n\n    function collectNewActivityIds() {\n        var ids = [];\n        for(var i = 0; i < this.notifications.length; i++) {\n            if (this.notifications[i]['must_notify'] > 0) {\n                ids.push(this.notifications[i]['id']);\n            }\n        }\n        return ids;\n    }\n\n}());\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    /**\n     * Ajax-enabled forms public bootstraper\n     */\n    var AjaxFormsInitializer = namespace(\"Tmt.Initializers\").AjaxFormsInitializer = function () {\n        this.forms = [];\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], AjaxFormsInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        }\n    });\n\n    function bindPageForms() {\n        var forms = [];\n\n        $(\"form[data-ctrl-mode=ajax]\").each(function () {\n            var form = new Tmt.Components.AjaxForm($(this));\n            form.render();\n            forms.push(form);\n        });\n\n        this.forms = forms;\n        this.emit('bound', this);\n    }\n\n    function addEvents(app) {\n        app.on('ready', bindPageForms.bind(this));\n    }\n\n}(jQuery));\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var PlayerInitializer = namespace(\"Tmt.Initializers\").PlayerInitializer = function () {\n        this.initialize();\n        this.players = [];\n    };\n\n    inherit([Tmt.EventEmitter], PlayerInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        }\n    });\n\n    function addEvents(app) {\n        $(onDomReady.bind(this));\n    }\n\n    function onDomReady() {\n        var components = $(\"*[data-song-vid]\");\n        if (components.length > 0) {\n            for (var i = 0; i < components.length; i++) {\n                this.players.push(new Tmt.Components.Player($(components.get(i))));\n            }\n            includeYoutubeScript.call(this);\n        }\n        this.emit('bound', this);\n    }\n\n    function onYouTubeReady() {\n        for (var i = 0; i < this.players.length; i++) {\n            this.players[i].render();\n        }\n    }\n\n    function includeYoutubeScript() {\n        var tag = document.createElement('script');\n        tag.src = \"//www.youtube.com/player_api\";\n\n        window.onYouTubeIframeAPIReady = onYouTubeReady.bind(this);\n\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n}(jQuery));\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    var ProfileInitializer = namespace(\"Tmt.Initializers\").ProfileInitializer = function () {\n        this.profile = null;\n        this.notificationTimestamp = 0;\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], ProfileInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        }\n    });\n\n\n    function addEvents(app) {\n        app.on('ready', bindProfileHooks.bind(this));\n        app.initializers.UpvoteFormsInitializer.on('bound', bindToUpvoteForms.bind(this));\n    }\n\n    function bindProfileHooks(app) {\n        this.app = app;\n        this.profile = app.profile;\n        app.profile.on(\"dataSet\", bindToProfile.bind(this));\n    }\n\n    function bindToUpvoteForms(UpvoteFormsInitializer) {\n        for (var i = 0, len = UpvoteFormsInitializer.boxes.length; i < len; i++) {\n            var box = UpvoteFormsInitializer.boxes[i];\n            box.on(\"valueChange\", onUpvoteValue.bind(this));\n        }\n    }\n\n    function bindToProfile(profile) {\n        if (profile.id > 0) {\n            bindNotifier.call(this, profile);\n            pingNotifications.call(this, profile);\n        }\n    }\n\n    function pingNotifications() {\n        $.ajax({\n            dataType : \"html\",\n            url : \"/ajax/whatsUp/\",\n            contentType:\"application/json; charset=utf-8\",\n            data : { timestamp: this.notificationTimestamp},\n            success : function(data) {\n                data = JSON.parse(data);\n                for(var i = 0, len = data.length; i < len; i++) {\n                    this.profile.addNotification(data[i]);\n                }\n                setTimeout(pingNotifications.bind(this), 1000 * 60 * 2);\n            }.bind(this)\n        });\n\n        this.notificationTimestamp = parseInt(Date.now() / 1000, 10);\n    }\n\n    function bindNotifier(profile) {\n        var notifier = new Tmt.Components.Notifier($('[data-ctrl=notifier]'), profile);\n        notifier.on('notificationRead', clearNotifications.bind(this));\n        notifier.render();\n    }\n\n    function clearNotifications(notificationsIds, destinationUrl) {\n         $.ajax({\n            dataType : \"html\",\n            url : \"/ajax/okstfu/\",\n            contentType:\"application/json; charset=utf-8\",\n            data : { ids: notificationsIds},\n            success : function(data) {\n                if (destinationUrl) {\n                    window.location = destinationUrl;\n                }\n            }\n        });\n    }\n\n    function onUpvoteValue(value, upvoteForm) {\n        var type = upvoteForm.isTrack() ? \"tracks\" : \"albums\";\n\n        if (value > 0) {\n            this.profile.addUpvote(type, upvoteForm.getObjectId(), value);\n        } else {\n            this.profile.removeUpvote(type, upvoteForm.getObjectId());\n        }\n    }\n\n}(jQuery));\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    /**\n     * Ajax-enabled forms public bootstraper\n     */\n    var SearchInitializer = namespace(\"Tmt.Initializers\").SearchInitializer = function () {\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], SearchInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        }\n    });\n\n    function bindForm() {\n        new Tmt.Components.SearchForm();\n    }\n\n    function addEvents(app) {\n        app.on('ready', bindForm.bind(this));\n    }\n\n}(jQuery));\n","(function ($, undefined) {\n\n    \"use strict\";\n\n    /**\n     * Ajax-enabled forms public bootstraper\n     */\n    var UpvoteFormsInitializer = namespace(\"Tmt.Initializers\").UpvoteFormsInitializer = function () {\n        this.boxes = [];\n        this.initialize();\n    };\n\n    inherit([Tmt.EventEmitter], UpvoteFormsInitializer, {\n        'build': function (app) {\n            addEvents.call(this, app);\n        }\n    });\n\n    function addEvents(app) {\n        app.initializers.AjaxFormsInitializer.on('bound', bindToAjaxForms.bind(this));\n        app.profile.on('upvoteSet', updateStateFirstTime.bind(this));\n    }\n\n    function bindToAjaxForms(AjaxFormsInitializer) {\n        var upvoteForms = filter('[data-ctrl=\"upvote-widget\"]', AjaxFormsInitializer.forms);\n\n        for (var i = 0, len = upvoteForms.length; i < len; i++) {\n            this.boxes.push(new Tmt.Components.UpvoteForm(upvoteForms[i]));\n        }\n\n        this.emit('bound', this);\n    }\n\n    function updateStateFirstTime(type, newValues) {\n\n        for (var i = 0, len = this.boxes.length; i < len; i++) {\n            var box = this.boxes[i];\n\n            if (box.getType() == type) {\n                var matching = newValues[box.getObjectId()];\n                if (matching) {\n                    box.setValue(matching);\n                }\n\n                box.unlock();\n            }\n        }\n\n        this.emit(\"completed\");\n    }\n\n}(jQuery));\n"]}